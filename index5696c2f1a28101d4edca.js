/*! For license information please see index5696c2f1a28101d4edca.js.LICENSE.txt */
(()=>{"use strict";var e={424:(e,t,n)=>{n.d(t,{Z:()=>f});var r=n(537),o=n.n(r),a=n(645),i=n.n(a),c=n(667),s=n.n(c),u=new URL(n(120),n.b),l=i()(o()),p=s()(u);l.push([e.id,`.pledged {\n    color: red;\n}\nlabel {\n    display: inline;\n    text-transform: none;\n    font-size: 16px;\n}\n#ownNTF {\n    display: flex;\n    display: -webkit-flex;\n    flex-wrap: wrap;            \n    justify-content: flex-start;\n    margin-bottom: 10px;\n}\n#ownNTF .img {\n    position: relative;\n    padding-top: 100%;\n}\n#ownNTF img {\n    display: inline-block;    \n    position: absolute;\n    width: 100%;\n    height: 100%;\n    top: 0;\n    left: 0;\n}\n#ownNTF img::after {\n    content: "";\n    height: 100%;\n    width: 100%;\n    position: absolute;\n    left: 0;\n    top: 0;\n    background: url(${p}) no-repeat center;\n    background-size: 100%;\n}\n#ownNTF>div {\n    border: 2px solid #fff;\n    width: 16%;\n}\n@media only screen and (max-width: 767px) {\n    #ownNTF>div {\n        width: 19%;\n    }            \n}\n@media only screen and (max-width: 479px) {\n    #ownNTF>div {\n        width: 24%;\n    }\n}\n#pledgedNTF {\n    text-align: left;\n    border: 1px solid #fff;\n    padding: 5px 5px;\n}\n#showpledged {\n    display: none;\n}\n.checkall {\n    display: none;\n}\n.getmore {\n    display: none;\n}\n.getmore a {\n    display: inline;\n}\n.fleft {    \n    float: left;\n    font-size: 16px;\n    line-height: 28px;\n}\n.fright {\n    float: right;\n    margin-right: 10px;\n}\n.intro-content {\n    width: 90%;\n}\n#pledgetime {\n    background-color: rgba(255, 255, 255);\n}\n.footer {\n    margin-bottom: 30px;\n}\n`,"",{version:3,sources:["webpack://./src/index.css"],names:[],mappings:"AAAA;IACI,UAAU;AACd;AACA;IACI,eAAe;IACf,oBAAoB;IACpB,eAAe;AACnB;AACA;IACI,aAAa;IACb,qBAAqB;IACrB,eAAe;IACf,2BAA2B;IAC3B,mBAAmB;AACvB;AACA;IACI,kBAAkB;IAClB,iBAAiB;AACrB;AACA;IACI,qBAAqB;IACrB,kBAAkB;IAClB,WAAW;IACX,YAAY;IACZ,MAAM;IACN,OAAO;AACX;AACA;IACI,WAAW;IACX,YAAY;IACZ,WAAW;IACX,kBAAkB;IAClB,OAAO;IACP,MAAM;IACN,oEAAqD;IACrD,qBAAqB;AACzB;AACA;IACI,sBAAsB;IACtB,UAAU;AACd;AACA;IACI;QACI,UAAU;IACd;AACJ;AACA;IACI;QACI,UAAU;IACd;AACJ;AACA;IACI,gBAAgB;IAChB,sBAAsB;IACtB,gBAAgB;AACpB;AACA;IACI,aAAa;AACjB;AACA;IACI,aAAa;AACjB;AACA;IACI,aAAa;AACjB;AACA;IACI,eAAe;AACnB;AACA;IACI,WAAW;IACX,eAAe;IACf,iBAAiB;AACrB;AACA;IACI,YAAY;IACZ,kBAAkB;AACtB;AACA;IACI,UAAU;AACd;AACA;IACI,qCAAqC;AACzC;AACA;IACI,mBAAmB;AACvB",sourcesContent:['.pledged {\r\n    color: red;\r\n}\r\nlabel {\r\n    display: inline;\r\n    text-transform: none;\r\n    font-size: 16px;\r\n}\r\n#ownNTF {\r\n    display: flex;\r\n    display: -webkit-flex;\r\n    flex-wrap: wrap;            \r\n    justify-content: flex-start;\r\n    margin-bottom: 10px;\r\n}\r\n#ownNTF .img {\r\n    position: relative;\r\n    padding-top: 100%;\r\n}\r\n#ownNTF img {\r\n    display: inline-block;    \r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    top: 0;\r\n    left: 0;\r\n}\r\n#ownNTF img::after {\r\n    content: "";\r\n    height: 100%;\r\n    width: 100%;\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    background: url(../dist/unknown.png) no-repeat center;\r\n    background-size: 100%;\r\n}\r\n#ownNTF>div {\r\n    border: 2px solid #fff;\r\n    width: 16%;\r\n}\r\n@media only screen and (max-width: 767px) {\r\n    #ownNTF>div {\r\n        width: 19%;\r\n    }            \r\n}\r\n@media only screen and (max-width: 479px) {\r\n    #ownNTF>div {\r\n        width: 24%;\r\n    }\r\n}\r\n#pledgedNTF {\r\n    text-align: left;\r\n    border: 1px solid #fff;\r\n    padding: 5px 5px;\r\n}\r\n#showpledged {\r\n    display: none;\r\n}\r\n.checkall {\r\n    display: none;\r\n}\r\n.getmore {\r\n    display: none;\r\n}\r\n.getmore a {\r\n    display: inline;\r\n}\r\n.fleft {    \r\n    float: left;\r\n    font-size: 16px;\r\n    line-height: 28px;\r\n}\r\n.fright {\r\n    float: right;\r\n    margin-right: 10px;\r\n}\r\n.intro-content {\r\n    width: 90%;\r\n}\r\n#pledgetime {\r\n    background-color: rgba(255, 255, 255);\r\n}\r\n.footer {\r\n    margin-bottom: 30px;\r\n}\r\n'],sourceRoot:""}]);const f=l},645:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",r=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),r&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),r&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,r,o,a){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(r)for(var c=0;c<this.length;c++){var s=this[c][0];null!=s&&(i[s]=!0)}for(var u=0;u<e.length;u++){var l=[].concat(e[u]);r&&i[l[0]]||(void 0!==a&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=a),n&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=n):l[2]=n),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),t.push(l))}},t}},667:e=>{e.exports=function(e,t){return t||(t={}),e?(e=String(e.__esModule?e.default:e),/^['"].*['"]$/.test(e)&&(e=e.slice(1,-1)),t.hash&&(e+=t.hash),/["'() \t\n]|(%20)/.test(e)||t.needQuotes?'"'.concat(e.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):e):e}},537:e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(o," */");return[t].concat([a]).join("\n")}return[t].join("\n")}},379:e=>{var t=[];function n(e){for(var n=-1,r=0;r<t.length;r++)if(t[r].identifier===e){n=r;break}return n}function r(e,r){for(var a={},i=[],c=0;c<e.length;c++){var s=e[c],u=r.base?s[0]+r.base:s[0],l=a[u]||0,p="".concat(u," ").concat(l);a[u]=l+1;var f=n(p),d={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==f)t[f].references++,t[f].updater(d);else{var h=o(d,r);r.byIndex=c,t.splice(c,0,{identifier:p,updater:h,references:1})}i.push(p)}return i}function o(e,t){var n=t.domAPI(t);n.update(e);return function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,o){var a=r(e=e||[],o=o||{});return function(e){e=e||[];for(var i=0;i<a.length;i++){var c=n(a[i]);t[c].references--}for(var s=r(e,o),u=0;u<a.length;u++){var l=n(a[u]);0===t[l].references&&(t[l].updater(),t.splice(l,1))}a=s}}},569:e=>{var t={};e.exports=function(e,n){var r=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(n)}},216:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var r="";n.supports&&(r+="@supports (".concat(n.supports,") {")),n.media&&(r+="@media ".concat(n.media," {"));var o=void 0!==n.layer;o&&(r+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),r+=n.css,o&&(r+="}"),n.media&&(r+="}"),n.supports&&(r+="}");var a=n.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),t.styleTagTransform(r,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}},120:(e,t,n)=>{e.exports=n.p+"4f5c90e4ddb8e12fe38c.png"}},t={};function n(r){var o=t[r];if(void 0!==o)return o.exports;var a=t[r]={id:r,exports:{}};return e[r](a,a.exports,n),a.exports}n.m=e,n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var e;n.g.importScripts&&(e=n.g.location+"");var t=n.g.document;if(!e&&t&&(t.currentScript&&(e=t.currentScript.src),!e)){var r=t.getElementsByTagName("script");if(r.length)for(var o=r.length-1;o>-1&&!e;)e=r[o--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),n.p=e})(),n.b=document.baseURI||self.location.href,n.nc=void 0,(()=>{var e=n(379),t=n.n(e),r=n(795),o=n.n(r),a=n(569),i=n.n(a),c=n(565),s=n.n(c),u=n(216),l=n.n(u),p=n(589),f=n.n(p),d=n(424),h={};h.styleTagTransform=f(),h.setAttributes=s(),h.insert=i().bind(null,"head"),h.domAPI=o(),h.insertStyleElement=l();t()(d.Z,h);d.Z&&d.Z.locals&&d.Z.locals;function A(e){return A="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},A(e)}function v(){v=function(){return e};var e={},t=Object.prototype,n=t.hasOwnProperty,r=Object.defineProperty||function(e,t,n){e[t]=n.value},o="function"==typeof Symbol?Symbol:{},a=o.iterator||"@@iterator",i=o.asyncIterator||"@@asyncIterator",c=o.toStringTag||"@@toStringTag";function s(e,t,n){return Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}),e[t]}try{s({},"")}catch(e){s=function(e,t,n){return e[t]=n}}function u(e,t,n,o){var a=t&&t.prototype instanceof f?t:f,i=Object.create(a.prototype),c=new E(o||[]);return r(i,"_invoke",{value:k(e,n,c)}),i}function l(e,t,n){try{return{type:"normal",arg:e.call(t,n)}}catch(e){return{type:"throw",arg:e}}}e.wrap=u;var p={};function f(){}function d(){}function h(){}var y={};s(y,a,(function(){return this}));var m=Object.getPrototypeOf,g=m&&m(m(T([])));g&&g!==t&&n.call(g,a)&&(y=g);var b=h.prototype=f.prototype=Object.create(y);function w(e){["next","throw","return"].forEach((function(t){s(e,t,(function(e){return this._invoke(t,e)}))}))}function x(e,t){function o(r,a,i,c){var s=l(e[r],e,a);if("throw"!==s.type){var u=s.arg,p=u.value;return p&&"object"==A(p)&&n.call(p,"__await")?t.resolve(p.__await).then((function(e){o("next",e,i,c)}),(function(e){o("throw",e,i,c)})):t.resolve(p).then((function(e){u.value=e,i(u)}),(function(e){return o("throw",e,i,c)}))}c(s.arg)}var a;r(this,"_invoke",{value:function(e,n){function r(){return new t((function(t,r){o(e,n,t,r)}))}return a=a?a.then(r,r):r()}})}function k(e,t,n){var r="suspendedStart";return function(o,a){if("executing"===r)throw new Error("Generator is already running");if("completed"===r){if("throw"===o)throw a;return{value:void 0,done:!0}}for(n.method=o,n.arg=a;;){var i=n.delegate;if(i){var c=C(i,n);if(c){if(c===p)continue;return c}}if("next"===n.method)n.sent=n._sent=n.arg;else if("throw"===n.method){if("suspendedStart"===r)throw r="completed",n.arg;n.dispatchException(n.arg)}else"return"===n.method&&n.abrupt("return",n.arg);r="executing";var s=l(e,t,n);if("normal"===s.type){if(r=n.done?"completed":"suspendedYield",s.arg===p)continue;return{value:s.arg,done:n.done}}"throw"===s.type&&(r="completed",n.method="throw",n.arg=s.arg)}}}function C(e,t){var n=t.method,r=e.iterator[n];if(void 0===r)return t.delegate=null,"throw"===n&&e.iterator.return&&(t.method="return",t.arg=void 0,C(e,t),"throw"===t.method)||"return"!==n&&(t.method="throw",t.arg=new TypeError("The iterator does not provide a '"+n+"' method")),p;var o=l(r,e.iterator,t.arg);if("throw"===o.type)return t.method="throw",t.arg=o.arg,t.delegate=null,p;var a=o.arg;return a?a.done?(t[e.resultName]=a.value,t.next=e.nextLoc,"return"!==t.method&&(t.method="next",t.arg=void 0),t.delegate=null,p):a:(t.method="throw",t.arg=new TypeError("iterator result is not an object"),t.delegate=null,p)}function I(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function B(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function E(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(I,this),this.reset(!0)}function T(e){if(e||""===e){var t=e[a];if(t)return t.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length)){var r=-1,o=function t(){for(;++r<e.length;)if(n.call(e,r))return t.value=e[r],t.done=!1,t;return t.value=void 0,t.done=!0,t};return o.next=o}}throw new TypeError(A(e)+" is not iterable")}return d.prototype=h,r(b,"constructor",{value:h,configurable:!0}),r(h,"constructor",{value:d,configurable:!0}),d.displayName=s(h,c,"GeneratorFunction"),e.isGeneratorFunction=function(e){var t="function"==typeof e&&e.constructor;return!!t&&(t===d||"GeneratorFunction"===(t.displayName||t.name))},e.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,h):(e.__proto__=h,s(e,c,"GeneratorFunction")),e.prototype=Object.create(b),e},e.awrap=function(e){return{__await:e}},w(x.prototype),s(x.prototype,i,(function(){return this})),e.AsyncIterator=x,e.async=function(t,n,r,o,a){void 0===a&&(a=Promise);var i=new x(u(t,n,r,o),a);return e.isGeneratorFunction(n)?i:i.next().then((function(e){return e.done?e.value:i.next()}))},w(b),s(b,c,"Generator"),s(b,a,(function(){return this})),s(b,"toString",(function(){return"[object Generator]"})),e.keys=function(e){var t=Object(e),n=[];for(var r in t)n.push(r);return n.reverse(),function e(){for(;n.length;){var r=n.pop();if(r in t)return e.value=r,e.done=!1,e}return e.done=!0,e}},e.values=T,E.prototype={constructor:E,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(B),!e)for(var t in this)"t"===t.charAt(0)&&n.call(this,t)&&!isNaN(+t.slice(1))&&(this[t]=void 0)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var t=this;function r(n,r){return i.type="throw",i.arg=e,t.next=n,r&&(t.method="next",t.arg=void 0),!!r}for(var o=this.tryEntries.length-1;o>=0;--o){var a=this.tryEntries[o],i=a.completion;if("root"===a.tryLoc)return r("end");if(a.tryLoc<=this.prev){var c=n.call(a,"catchLoc"),s=n.call(a,"finallyLoc");if(c&&s){if(this.prev<a.catchLoc)return r(a.catchLoc,!0);if(this.prev<a.finallyLoc)return r(a.finallyLoc)}else if(c){if(this.prev<a.catchLoc)return r(a.catchLoc,!0)}else{if(!s)throw new Error("try statement without catch or finally");if(this.prev<a.finallyLoc)return r(a.finallyLoc)}}}},abrupt:function(e,t){for(var r=this.tryEntries.length-1;r>=0;--r){var o=this.tryEntries[r];if(o.tryLoc<=this.prev&&n.call(o,"finallyLoc")&&this.prev<o.finallyLoc){var a=o;break}}a&&("break"===e||"continue"===e)&&a.tryLoc<=t&&t<=a.finallyLoc&&(a=null);var i=a?a.completion:{};return i.type=e,i.arg=t,a?(this.method="next",this.next=a.finallyLoc,p):this.complete(i)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),p},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.finallyLoc===e)return this.complete(n.completion,n.afterLoc),B(n),p}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.tryLoc===e){var r=n.completion;if("throw"===r.type){var o=r.arg;B(n)}return o}}throw new Error("illegal catch attempt")},delegateYield:function(e,t,n){return this.delegate={iterator:T(e),resultName:t,nextLoc:n},"next"===this.method&&(this.arg=void 0),p}},e}function y(e,t,n,r,o,a,i){try{var c=e[a](i),s=c.value}catch(e){return void n(e)}c.done?t(s):Promise.resolve(s).then(r,o)}function m(e){return function(){var t=this,n=arguments;return new Promise((function(r,o){var a=e.apply(t,n);function i(e){y(a,r,o,i,c,"next",e)}function c(e){y(a,r,o,i,c,"throw",e)}i(void 0)}))}}var g,b,w,x,k,C;$((function(){!function(){ne.apply(this,arguments)}()}));var I=[],B=0,E="https://www.pi-marsdog.com/image/",T="0xFfcBb5a9da7ef105c43d24C99ce4E562A81d61a7",N=["function isBlacklisted(address) public view returns(bool)","function isApprovedForAll(address, address) public view returns(bool)","function setApprovalForAll(address, bool) public nonpayable","function tokenOfOwnerByIndex(address, uint256) public view returns(uint256)","function balanceOf(address) public view returns(uint256)"],F="0xb0c5258248866b760428b86f878c171d3bb7aab3",L=["function getattribute(uint16) public view returns(uint8, bool)","function setattribute(uint16, uint8[], bool[]) public nonpayable","function pledge(uint16[], uint8) public nonpayable","function releasepledge() public nonpayable","function balanceOf(address) public view returns(uint256)","function getpower() public view returns(uint256)",{inputs:[],name:"tokensofowner",outputs:[{components:[{internalType:"uint256",name:"power",type:"uint256"},{internalType:"uint64",name:"endTimestamp",type:"uint64"},{internalType:"uint16[]",name:"tokenids",type:"uint16[]"}],internalType:"struct test.pledgedata[]",name:"",type:"tuple[]"}],stateMutability:"view",type:"function"}];function O(){return j.apply(this,arguments)}function j(){return(j=m(v().mark((function e(){return v().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,ethereum.request({method:"eth_requestAccounts"}).then(S).catch((function(e){4001===e.code?console.log("Please connect to MetaMask."):console.error(e)}));case 2:return e.next=4,ethereum.request({method:"eth_chainId"}).then((function(e){e!==C&&(C=e)}));case 4:b=new ethers.providers.Web3Provider(window.ethereum),g=b.getSigner(k);case 6:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function S(e){0===e.length?console.log("Please connect to MetaMask."):e[0]!==k?(k=e[0],console.log("account is changed!")):console.log("the net is connected!")}function _(e,t){return M.apply(this,arguments)}function M(){return(M=m(v().mark((function e(t,n){return v().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(g){e.next=3;break}return e.next=3,O();case 3:return e.abrupt("return",new ethers.Contract(t,n,g));case 4:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function P(e){return U.apply(this,arguments)}function U(){return(U=m(v().mark((function e(t){return v().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(w){e.next=4;break}return e.next=3,_(T,N);case 3:w=e.sent;case 4:return e.next=6,w.isBlacklisted(t);case 6:return e.abrupt("return",e.sent);case 7:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function q(e){return z.apply(this,arguments)}function z(){return z=m(v().mark((function e(t){var n,r,o,a,i,c,s,u,l,p=arguments;return v().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(n=p.length>1&&void 0!==p[1]?p[1]:0,r=p.length>2&&void 0!==p[2]?p[2]:60,w){e.next=6;break}return e.next=5,_(T,N);case 5:w=e.sent;case 6:return e.next=8,Y(t);case 8:o=e.sent,a=[],i=!1,(c=n*r)+r<o?(s=c+r,i=!0):s=o,u=c;case 14:if(!(u<s)){e.next=22;break}return e.next=17,w.tokenOfOwnerByIndex(t,u);case 17:l=e.sent,a.push(l.toNumber());case 19:u++,e.next=14;break;case 22:return e.abrupt("return",{status:i,tokens:a});case 23:case"end":return e.stop()}}),e)}))),z.apply(this,arguments)}function Y(e){return W.apply(this,arguments)}function W(){return(W=m(v().mark((function e(t){var n;return v().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(w){e.next=4;break}return e.next=3,_(T,N);case 3:w=e.sent;case 4:return e.next=6,w.balanceOf(t);case 6:return n=e.sent,e.abrupt("return",n.toNumber());case 8:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function G(){return Z.apply(this,arguments)}function Z(){return(Z=m(v().mark((function e(){return v().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(w){e.next=4;break}return e.next=3,_(T,N);case 3:w=e.sent;case 4:return e.next=6,w.isApprovedForAll(k,F);case 6:return e.abrupt("return",e.sent);case 7:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function R(){return X.apply(this,arguments)}function X(){return(X=m(v().mark((function e(){var t,n;return v().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(w){e.next=4;break}return e.next=3,_(T,N);case 3:w=e.sent;case 4:return e.next=6,w.setApprovalForAll(F,!0);case 6:return t=e.sent,e.next=9,t.wait();case 9:return n=e.sent,e.abrupt("return",1==n.status);case 11:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function D(){return J.apply(this,arguments)}function J(){return(J=m(v().mark((function e(){return v().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(x){e.next=4;break}return e.next=3,_(F,L);case 3:x=e.sent;case 4:return e.next=6,x.tokensofowner();case 6:return e.sent,e.next=9,x.tokensofowner();case 9:return e.abrupt("return",e.sent);case 10:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function H(e){return Q.apply(this,arguments)}function Q(){return(Q=m(v().mark((function e(t){return v().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(x){e.next=4;break}return e.next=3,_(F,L);case 3:x=e.sent;case 4:return e.next=6,x.balanceOf(t);case 6:return e.abrupt("return",e.sent);case 7:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function K(){return V.apply(this,arguments)}function V(){return(V=m(v().mark((function e(){return v().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(x){e.next=4;break}return e.next=3,_(F,L);case 3:x=e.sent;case 4:return e.next=6,x.getpower();case 6:return e.abrupt("return",e.sent);case 7:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function ee(){return(ee=m(v().mark((function e(){return v().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,G();case 2:if(e.sent||R(),x){e.next=8;break}return e.next=7,_(F,L);case 7:x=e.sent;case 8:return ie(),e.prev=9,e.next=12,x.pledge(oe(),$("#pledgetime").val());case 12:window.location.reload(),e.next=18;break;case 15:e.prev=15,e.t0=e.catch(9),ce();case 18:case"end":return e.stop()}}),e,null,[[9,15]])})))).apply(this,arguments)}function te(){return(te=m(v().mark((function e(){return v().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(x){e.next=4;break}return e.next=3,_(F,L);case 3:x=e.sent;case 4:return ie(),e.prev=5,e.next=8,x.releasepledge();case 8:window.location.reload(),e.next=14;break;case 11:e.prev=11,e.t0=e.catch(5),ce();case 14:case"end":return e.stop()}}),e,null,[[5,11]])})))).apply(this,arguments)}function ne(){return(ne=m(v().mark((function e(){var t,n,r,o,a,i;return v().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(k){e.next=3;break}return e.next=3,O();case 3:return ie(),e.prev=4,e.next=7,P(k);case 7:if(!e.sent){e.next=10;break}return e.abrupt("return");case 10:return e.next=12,q(k);case 12:t=e.sent,e.next=18;break;case 15:e.prev=15,e.t0=e.catch(4),ce();case 18:return n="",0==t.tokens.length?n="<span style='color: red;'>You don't have an NFT yet, please obtain one first!</span>":($(".checkall").css("display","block"),t.tokens.forEach((function(e){n+='<div><label><input type="checkbox" onchange="calculatepower();" value="'+e+'"><div class="img"><img src="'+E+e+'.png" loading="lazy"></div>#'+e+"</label></div>"}))),t.status?($(".getmore").css("display","block"),B++):$(".getmore").css("display","none"),$("#ownNTF").html(n),e.prev=22,e.next=25,D();case 25:r=e.sent,e.next=31;break;case 28:e.prev=28,e.t1=e.catch(22),ce();case 31:return r.length>0&&(o="",a=parseInt((new Date).getTime()/1e3),i=0,r.forEach((function(e){var t=e.endTimestamp.toNumber()-a;if(t<=0)e.tokenids.forEach((function(e){o+="<div>#"+e+' time out! <span class="pledged">can be released</span></div>'}));else{var n=re(t,i);e.tokenids.forEach((function(e){o+="<div>#"+e+' <span class="pledged'+i+'">'+n+"</span></div>"})),I.push(t),i++}})),I.forEach((function(e,t){setInterval((function(){e>0&&(e--,$(".pledged"+t).html(re(e,t)))}),1e3)})),$("#pledgedNTF").html(o),$("#showpledged").css("display","block")),e.t2=$("#balance"),e.next=35,H(k);case 35:return e.t3=e.sent,e.t2.text.call(e.t2,e.t3),e.t4=$("#power"),e.next=40,K();case 40:e.t5=e.sent,e.t4.text.call(e.t4,e.t5),ce();case 43:case"end":return e.stop()}}),e,null,[[4,15],[22,28]])})))).apply(this,arguments)}function re(e,t){if(e<=0)return'time out! <span class="pledged">can be released</span>';var n=parseInt(e/60),r=e%60,o=parseInt(n/60);return n%=60,'pledging! time left<span class="pledged">'+parseInt(o/24)+"d"+(o%=24)+"h"+n+"m"+r+"s</span>"}function oe(){var e=[];return $("#ownNTF input[type=checkbox]:checked").each((function(){e.push($(this).val())})),e}function ae(){return(ae=m(v().mark((function e(){var t,n;return v().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,q(k,B);case 3:t=e.sent,e.next=9;break;case 6:e.prev=6,e.t0=e.catch(0),ce();case 9:n="",0==t.tokens.length?n="<span style='color: red;'>You don't have an NFT yet, please obtain one first!</span>":($(".checkall").css("display","block"),t.tokens.forEach((function(e){n+='<div><label><input type="checkbox" onchange="calculatepower();" value="'+e+'"><img src="'+E+e+'.png" loading="lazy">#'+e+"</label></div>"}))),t.status?($(".getmore").css("display","block"),B++):$(".getmore").css("display","none"),$("#ownNTF").append(n),ce();case 14:case"end":return e.stop()}}),e,null,[[0,6]])})))).apply(this,arguments)}function ie(){var e=document.createElement("div");e.id="mask_bg",e.style.position="absolute",e.style.top="0px",e.style.left="0px",e.style.width="100%";var t=document.body.scrollHeight+"px";e.style.height=t,e.style.backgroundColor="#777",e.style.opacity=.6,e.style.zIndex=10001,document.body.appendChild(e);var n=document.createElement("div");n.id="loading_div",n.style.position="fixed",n.style.top="50%",n.style.left="0px",n.style.width="100%",n.style.textAlign="center",n.style.zIndex=10002;var r=document.createElement("img");r.src="loading.gif",r.style.width="100px",r.style.display="inline-block",document.body.appendChild(n),n.appendChild(r)}function ce(){var e=document.getElementById("mask_bg");null!=e&&e.parentNode.removeChild(e);var t=document.getElementById("loading_div");null!=t&&t.parentNode.removeChild(t)}void 0===window.ethereum?console.log("Please install MetaMask."):console.log("Enable ethereum ok."),ethereum.on("accountsChanged",(function(e){S(e)})),ethereum.on("chainChanged",(function(e){window.location.reload()})),document.getElementById("checkall").addEventListener("click",(function(){$("#checkall").is(":checked")?$("#ownNTF input[type=checkbox]").each((function(){$(this).prop("checked",!0)})):$("#ownNTF input[type=checkbox]").each((function(){$(this).prop("checked",!1)}))})),document.getElementById("getmore").addEventListener("click",(function(){return ae.apply(this,arguments)})),document.getElementById("pledge").addEventListener("click",(function(){return ee.apply(this,arguments)})),document.getElementById("release").addEventListener("click",(function(){return te.apply(this,arguments)}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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RCxRQUFRQyxJQUFJLHVCQXdCaEJMLFNBQVN3SSxHQUFHLG1CQUFtQixTQUFDOUgsR0FDNUJSLEVBQXNCUSxFQUMxQixJQWFBVixTQUFTd0ksR0FBRyxnQkFBZ0IsU0FBQ3ZKLEdBQ3pCck0sT0FBT21ELFNBQVMrTyxRQUNwQixJQThRQXBTLFNBQVM2VixlQUFlLFlBQVlFLGlCQUFpQixTQS9FckQsV0FDUXZKLEVBQUUsYUFBYXdKLEdBQUcsWUFDbEJ4SixFQUFFLGdDQUFnQ2dJLE1BQUssV0FDbkNoSSxFQUFFL1EsTUFBTXNILEtBQUssV0FBVSxFQUMzQixJQUVBeUosRUFBRSxnQ0FBZ0NnSSxNQUFLLFdBQ25DaEksRUFBRS9RLE1BQU1zSCxLQUFLLFdBQVUsRUFDM0IsR0FFUixJQXNFQS9DLFNBQVM2VixlQUFlLFdBQVdFLGlCQUFpQixTQXRFbkQsV0FFcUIsT0FBQXRCLEdBQUF0VCxNQUFDLEtBQUQ4SyxVQUFBLElBcUV0QmpNLFNBQVM2VixlQUFlLFVBQVVFLGlCQUFpQixTQTVNbEQsV0FFb0IsT0FBQWpFLEdBQUEzUSxNQUFDLEtBQUQ4SyxVQUFBLElBMk1yQmpNLFNBQVM2VixlQUFlLFdBQVdFLGlCQUFpQixTQTdMbkQsV0FFMkIsT0FBQXhELEdBQUFwUixNQUFDLEtBQUQ4SyxVQUFBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXlkYXBwLy4vc3JjL2luZGV4LmNzcyIsIndlYnBhY2s6Ly9teWRhcHAvLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzIiwid2VicGFjazovL215ZGFwcC8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9nZXRVcmwuanMiLCJ3ZWJwYWNrOi8vbXlkYXBwLy4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanMiLCJ3ZWJwYWNrOi8vbXlkYXBwLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzIiwid2VicGFjazovL215ZGFwcC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanMiLCJ3ZWJwYWNrOi8vbXlkYXBwLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzIiwid2VicGFjazovL215ZGFwcC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qcyIsIndlYnBhY2s6Ly9teWRhcHAvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qcyIsIndlYnBhY2s6Ly9teWRhcHAvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qcyIsIndlYnBhY2s6Ly9teWRhcHAvd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vbXlkYXBwL3dlYnBhY2svcnVudGltZS9jb21wYXQgZ2V0IGRlZmF1bHQgZXhwb3J0Iiwid2VicGFjazovL215ZGFwcC93ZWJwYWNrL3J1bnRpbWUvZGVmaW5lIHByb3BlcnR5IGdldHRlcnMiLCJ3ZWJwYWNrOi8vbXlkYXBwL3dlYnBhY2svcnVudGltZS9nbG9iYWwiLCJ3ZWJwYWNrOi8vbXlkYXBwL3dlYnBhY2svcnVudGltZS9oYXNPd25Qcm9wZXJ0eSBzaG9ydGhhbmQiLCJ3ZWJwYWNrOi8vbXlkYXBwL3dlYnBhY2svcnVudGltZS9wdWJsaWNQYXRoIiwid2VicGFjazovL215ZGFwcC93ZWJwYWNrL3J1bnRpbWUvanNvbnAgY2h1bmsgbG9hZGluZyIsIndlYnBhY2s6Ly9teWRhcHAvd2VicGFjay9ydW50aW1lL25vbmNlIiwid2VicGFjazovL215ZGFwcC8uL3NyYy9pbmRleC5jc3M/Y2ZlNCIsIndlYnBhY2s6Ly9teWRhcHAvLi9zcmMvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9HRVRfVVJMX0lNUE9SVF9fXyBmcm9tIFwiLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2dldFVybC5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8wX19fID0gbmV3IFVSTChcIi4uL2Rpc3QvdW5rbm93bi5wbmdcIiwgaW1wb3J0Lm1ldGEudXJsKTtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8wX19fID0gX19fQ1NTX0xPQURFUl9HRVRfVVJMX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgYC5wbGVkZ2VkIHtcclxuICAgIGNvbG9yOiByZWQ7XHJcbn1cclxubGFiZWwge1xyXG4gICAgZGlzcGxheTogaW5saW5lO1xyXG4gICAgdGV4dC10cmFuc2Zvcm06IG5vbmU7XHJcbiAgICBmb250LXNpemU6IDE2cHg7XHJcbn1cclxuI293bk5URiB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZGlzcGxheTogLXdlYmtpdC1mbGV4O1xyXG4gICAgZmxleC13cmFwOiB3cmFwOyAgICAgICAgICAgIFxyXG4gICAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMTBweDtcclxufVxyXG4jb3duTlRGIC5pbWcge1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgcGFkZGluZy10b3A6IDEwMCU7XHJcbn1cclxuI293bk5URiBpbWcge1xyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrOyAgICBcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgdG9wOiAwO1xyXG4gICAgbGVmdDogMDtcclxufVxyXG4jb3duTlRGIGltZzo6YWZ0ZXIge1xyXG4gICAgY29udGVudDogXCJcIjtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgbGVmdDogMDtcclxuICAgIHRvcDogMDtcclxuICAgIGJhY2tncm91bmQ6IHVybCgke19fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzBfX199KSBuby1yZXBlYXQgY2VudGVyO1xyXG4gICAgYmFja2dyb3VuZC1zaXplOiAxMDAlO1xyXG59XHJcbiNvd25OVEY+ZGl2IHtcclxuICAgIGJvcmRlcjogMnB4IHNvbGlkICNmZmY7XHJcbiAgICB3aWR0aDogMTYlO1xyXG59XHJcbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY3cHgpIHtcclxuICAgICNvd25OVEY+ZGl2IHtcclxuICAgICAgICB3aWR0aDogMTklO1xyXG4gICAgfSAgICAgICAgICAgIFxyXG59XHJcbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDc5cHgpIHtcclxuICAgICNvd25OVEY+ZGl2IHtcclxuICAgICAgICB3aWR0aDogMjQlO1xyXG4gICAgfVxyXG59XHJcbiNwbGVkZ2VkTlRGIHtcclxuICAgIHRleHQtYWxpZ246IGxlZnQ7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjZmZmO1xyXG4gICAgcGFkZGluZzogNXB4IDVweDtcclxufVxyXG4jc2hvd3BsZWRnZWQge1xyXG4gICAgZGlzcGxheTogbm9uZTtcclxufVxyXG4uY2hlY2thbGwge1xyXG4gICAgZGlzcGxheTogbm9uZTtcclxufVxyXG4uZ2V0bW9yZSB7XHJcbiAgICBkaXNwbGF5OiBub25lO1xyXG59XHJcbi5nZXRtb3JlIGEge1xyXG4gICAgZGlzcGxheTogaW5saW5lO1xyXG59XHJcbi5mbGVmdCB7ICAgIFxyXG4gICAgZmxvYXQ6IGxlZnQ7XHJcbiAgICBmb250LXNpemU6IDE2cHg7XHJcbiAgICBsaW5lLWhlaWdodDogMjhweDtcclxufVxyXG4uZnJpZ2h0IHtcclxuICAgIGZsb2F0OiByaWdodDtcclxuICAgIG1hcmdpbi1yaWdodDogMTBweDtcclxufVxyXG4uaW50cm8tY29udGVudCB7XHJcbiAgICB3aWR0aDogOTAlO1xyXG59XHJcbiNwbGVkZ2V0aW1lIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSk7XHJcbn1cclxuLmZvb3RlciB7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAzMHB4O1xyXG59XHJcbmAsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL2luZGV4LmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTtJQUNJLFVBQVU7QUFDZDtBQUNBO0lBQ0ksZUFBZTtJQUNmLG9CQUFvQjtJQUNwQixlQUFlO0FBQ25CO0FBQ0E7SUFDSSxhQUFhO0lBQ2IscUJBQXFCO0lBQ3JCLGVBQWU7SUFDZiwyQkFBMkI7SUFDM0IsbUJBQW1CO0FBQ3ZCO0FBQ0E7SUFDSSxrQkFBa0I7SUFDbEIsaUJBQWlCO0FBQ3JCO0FBQ0E7SUFDSSxxQkFBcUI7SUFDckIsa0JBQWtCO0lBQ2xCLFdBQVc7SUFDWCxZQUFZO0lBQ1osTUFBTTtJQUNOLE9BQU87QUFDWDtBQUNBO0lBQ0ksV0FBVztJQUNYLFlBQVk7SUFDWixXQUFXO0lBQ1gsa0JBQWtCO0lBQ2xCLE9BQU87SUFDUCxNQUFNO0lBQ04sb0VBQXFEO0lBQ3JELHFCQUFxQjtBQUN6QjtBQUNBO0lBQ0ksc0JBQXNCO0lBQ3RCLFVBQVU7QUFDZDtBQUNBO0lBQ0k7UUFDSSxVQUFVO0lBQ2Q7QUFDSjtBQUNBO0lBQ0k7UUFDSSxVQUFVO0lBQ2Q7QUFDSjtBQUNBO0lBQ0ksZ0JBQWdCO0lBQ2hCLHNCQUFzQjtJQUN0QixnQkFBZ0I7QUFDcEI7QUFDQTtJQUNJLGFBQWE7QUFDakI7QUFDQTtJQUNJLGFBQWE7QUFDakI7QUFDQTtJQUNJLGFBQWE7QUFDakI7QUFDQTtJQUNJLGVBQWU7QUFDbkI7QUFDQTtJQUNJLFdBQVc7SUFDWCxlQUFlO0lBQ2YsaUJBQWlCO0FBQ3JCO0FBQ0E7SUFDSSxZQUFZO0lBQ1osa0JBQWtCO0FBQ3RCO0FBQ0E7SUFDSSxVQUFVO0FBQ2Q7QUFDQTtJQUNJLHFDQUFxQztBQUN6QztBQUNBO0lBQ0ksbUJBQW1CO0FBQ3ZCXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIi5wbGVkZ2VkIHtcXHJcXG4gICAgY29sb3I6IHJlZDtcXHJcXG59XFxyXFxubGFiZWwge1xcclxcbiAgICBkaXNwbGF5OiBpbmxpbmU7XFxyXFxuICAgIHRleHQtdHJhbnNmb3JtOiBub25lO1xcclxcbiAgICBmb250LXNpemU6IDE2cHg7XFxyXFxufVxcclxcbiNvd25OVEYge1xcclxcbiAgICBkaXNwbGF5OiBmbGV4O1xcclxcbiAgICBkaXNwbGF5OiAtd2Via2l0LWZsZXg7XFxyXFxuICAgIGZsZXgtd3JhcDogd3JhcDsgICAgICAgICAgICBcXHJcXG4gICAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xcclxcbiAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xcclxcbn1cXHJcXG4jb3duTlRGIC5pbWcge1xcclxcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XFxyXFxuICAgIHBhZGRpbmctdG9wOiAxMDAlO1xcclxcbn1cXHJcXG4jb3duTlRGIGltZyB7XFxyXFxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jazsgICAgXFxyXFxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXHJcXG4gICAgd2lkdGg6IDEwMCU7XFxyXFxuICAgIGhlaWdodDogMTAwJTtcXHJcXG4gICAgdG9wOiAwO1xcclxcbiAgICBsZWZ0OiAwO1xcclxcbn1cXHJcXG4jb3duTlRGIGltZzo6YWZ0ZXIge1xcclxcbiAgICBjb250ZW50OiBcXFwiXFxcIjtcXHJcXG4gICAgaGVpZ2h0OiAxMDAlO1xcclxcbiAgICB3aWR0aDogMTAwJTtcXHJcXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xcclxcbiAgICBsZWZ0OiAwO1xcclxcbiAgICB0b3A6IDA7XFxyXFxuICAgIGJhY2tncm91bmQ6IHVybCguLi9kaXN0L3Vua25vd24ucG5nKSBuby1yZXBlYXQgY2VudGVyO1xcclxcbiAgICBiYWNrZ3JvdW5kLXNpemU6IDEwMCU7XFxyXFxufVxcclxcbiNvd25OVEY+ZGl2IHtcXHJcXG4gICAgYm9yZGVyOiAycHggc29saWQgI2ZmZjtcXHJcXG4gICAgd2lkdGg6IDE2JTtcXHJcXG59XFxyXFxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjdweCkge1xcclxcbiAgICAjb3duTlRGPmRpdiB7XFxyXFxuICAgICAgICB3aWR0aDogMTklO1xcclxcbiAgICB9ICAgICAgICAgICAgXFxyXFxufVxcclxcbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDc5cHgpIHtcXHJcXG4gICAgI293bk5URj5kaXYge1xcclxcbiAgICAgICAgd2lkdGg6IDI0JTtcXHJcXG4gICAgfVxcclxcbn1cXHJcXG4jcGxlZGdlZE5URiB7XFxyXFxuICAgIHRleHQtYWxpZ246IGxlZnQ7XFxyXFxuICAgIGJvcmRlcjogMXB4IHNvbGlkICNmZmY7XFxyXFxuICAgIHBhZGRpbmc6IDVweCA1cHg7XFxyXFxufVxcclxcbiNzaG93cGxlZGdlZCB7XFxyXFxuICAgIGRpc3BsYXk6IG5vbmU7XFxyXFxufVxcclxcbi5jaGVja2FsbCB7XFxyXFxuICAgIGRpc3BsYXk6IG5vbmU7XFxyXFxufVxcclxcbi5nZXRtb3JlIHtcXHJcXG4gICAgZGlzcGxheTogbm9uZTtcXHJcXG59XFxyXFxuLmdldG1vcmUgYSB7XFxyXFxuICAgIGRpc3BsYXk6IGlubGluZTtcXHJcXG59XFxyXFxuLmZsZWZ0IHsgICAgXFxyXFxuICAgIGZsb2F0OiBsZWZ0O1xcclxcbiAgICBmb250LXNpemU6IDE2cHg7XFxyXFxuICAgIGxpbmUtaGVpZ2h0OiAyOHB4O1xcclxcbn1cXHJcXG4uZnJpZ2h0IHtcXHJcXG4gICAgZmxvYXQ6IHJpZ2h0O1xcclxcbiAgICBtYXJnaW4tcmlnaHQ6IDEwcHg7XFxyXFxufVxcclxcbi5pbnRyby1jb250ZW50IHtcXHJcXG4gICAgd2lkdGg6IDkwJTtcXHJcXG59XFxyXFxuI3BsZWRnZXRpbWUge1xcclxcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUpO1xcclxcbn1cXHJcXG4uZm9vdGVyIHtcXHJcXG4gICAgbWFyZ2luLWJvdHRvbTogMzBweDtcXHJcXG59XFxyXFxuXCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIlwidXNlIHN0cmljdFwiO1xuXG4vKlxuICBNSVQgTGljZW5zZSBodHRwOi8vd3d3Lm9wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlLnBocFxuICBBdXRob3IgVG9iaWFzIEtvcHBlcnMgQHNva3JhXG4qL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoY3NzV2l0aE1hcHBpbmdUb1N0cmluZykge1xuICB2YXIgbGlzdCA9IFtdO1xuXG4gIC8vIHJldHVybiB0aGUgbGlzdCBvZiBtb2R1bGVzIGFzIGNzcyBzdHJpbmdcbiAgbGlzdC50b1N0cmluZyA9IGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICAgIHJldHVybiB0aGlzLm1hcChmdW5jdGlvbiAoaXRlbSkge1xuICAgICAgdmFyIGNvbnRlbnQgPSBcIlwiO1xuICAgICAgdmFyIG5lZWRMYXllciA9IHR5cGVvZiBpdGVtWzVdICE9PSBcInVuZGVmaW5lZFwiO1xuICAgICAgaWYgKGl0ZW1bNF0pIHtcbiAgICAgICAgY29udGVudCArPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KGl0ZW1bNF0sIFwiKSB7XCIpO1xuICAgICAgfVxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgY29udGVudCArPSBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKTtcbiAgICAgIH1cbiAgICAgIGlmIChuZWVkTGF5ZXIpIHtcbiAgICAgICAgY29udGVudCArPSBcIkBsYXllclwiLmNvbmNhdChpdGVtWzVdLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQoaXRlbVs1XSkgOiBcIlwiLCBcIiB7XCIpO1xuICAgICAgfVxuICAgICAgY29udGVudCArPSBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0pO1xuICAgICAgaWYgKG5lZWRMYXllcikge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cbiAgICAgIGlmIChpdGVtWzRdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG4gICAgICByZXR1cm4gY29udGVudDtcbiAgICB9KS5qb2luKFwiXCIpO1xuICB9O1xuXG4gIC8vIGltcG9ydCBhIGxpc3Qgb2YgbW9kdWxlcyBpbnRvIHRoZSBsaXN0XG4gIGxpc3QuaSA9IGZ1bmN0aW9uIGkobW9kdWxlcywgbWVkaWEsIGRlZHVwZSwgc3VwcG9ydHMsIGxheWVyKSB7XG4gICAgaWYgKHR5cGVvZiBtb2R1bGVzID09PSBcInN0cmluZ1wiKSB7XG4gICAgICBtb2R1bGVzID0gW1tudWxsLCBtb2R1bGVzLCB1bmRlZmluZWRdXTtcbiAgICB9XG4gICAgdmFyIGFscmVhZHlJbXBvcnRlZE1vZHVsZXMgPSB7fTtcbiAgICBpZiAoZGVkdXBlKSB7XG4gICAgICBmb3IgKHZhciBrID0gMDsgayA8IHRoaXMubGVuZ3RoOyBrKyspIHtcbiAgICAgICAgdmFyIGlkID0gdGhpc1trXVswXTtcbiAgICAgICAgaWYgKGlkICE9IG51bGwpIHtcbiAgICAgICAgICBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2lkXSA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgZm9yICh2YXIgX2sgPSAwOyBfayA8IG1vZHVsZXMubGVuZ3RoOyBfaysrKSB7XG4gICAgICB2YXIgaXRlbSA9IFtdLmNvbmNhdChtb2R1bGVzW19rXSk7XG4gICAgICBpZiAoZGVkdXBlICYmIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaXRlbVswXV0pIHtcbiAgICAgICAgY29udGludWU7XG4gICAgICB9XG4gICAgICBpZiAodHlwZW9mIGxheWVyICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgIGlmICh0eXBlb2YgaXRlbVs1XSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICAgIGl0ZW1bNV0gPSBsYXllcjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAbGF5ZXJcIi5jb25jYXQoaXRlbVs1XS5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KGl0ZW1bNV0pIDogXCJcIiwgXCIge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bNV0gPSBsYXllcjtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgaWYgKG1lZGlhKSB7XG4gICAgICAgIGlmICghaXRlbVsyXSkge1xuICAgICAgICAgIGl0ZW1bMl0gPSBtZWRpYTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAbWVkaWEgXCIuY29uY2F0KGl0ZW1bMl0sIFwiIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWE7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmIChzdXBwb3J0cykge1xuICAgICAgICBpZiAoIWl0ZW1bNF0pIHtcbiAgICAgICAgICBpdGVtWzRdID0gXCJcIi5jb25jYXQoc3VwcG9ydHMpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KGl0ZW1bNF0sIFwiKSB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVs0XSA9IHN1cHBvcnRzO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBsaXN0LnB1c2goaXRlbSk7XG4gICAgfVxuICB9O1xuICByZXR1cm4gbGlzdDtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKHVybCwgb3B0aW9ucykge1xuICBpZiAoIW9wdGlvbnMpIHtcbiAgICBvcHRpb25zID0ge307XG4gIH1cbiAgaWYgKCF1cmwpIHtcbiAgICByZXR1cm4gdXJsO1xuICB9XG4gIHVybCA9IFN0cmluZyh1cmwuX19lc01vZHVsZSA/IHVybC5kZWZhdWx0IDogdXJsKTtcblxuICAvLyBJZiB1cmwgaXMgYWxyZWFkeSB3cmFwcGVkIGluIHF1b3RlcywgcmVtb3ZlIHRoZW1cbiAgaWYgKC9eWydcIl0uKlsnXCJdJC8udGVzdCh1cmwpKSB7XG4gICAgdXJsID0gdXJsLnNsaWNlKDEsIC0xKTtcbiAgfVxuICBpZiAob3B0aW9ucy5oYXNoKSB7XG4gICAgdXJsICs9IG9wdGlvbnMuaGFzaDtcbiAgfVxuXG4gIC8vIFNob3VsZCB1cmwgYmUgd3JhcHBlZD9cbiAgLy8gU2VlIGh0dHBzOi8vZHJhZnRzLmNzc3dnLm9yZy9jc3MtdmFsdWVzLTMvI3VybHNcbiAgaWYgKC9bXCInKCkgXFx0XFxuXXwoJTIwKS8udGVzdCh1cmwpIHx8IG9wdGlvbnMubmVlZFF1b3Rlcykge1xuICAgIHJldHVybiBcIlxcXCJcIi5jb25jYXQodXJsLnJlcGxhY2UoL1wiL2csICdcXFxcXCInKS5yZXBsYWNlKC9cXG4vZywgXCJcXFxcblwiKSwgXCJcXFwiXCIpO1xuICB9XG4gIHJldHVybiB1cmw7XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdGVtKSB7XG4gIHZhciBjb250ZW50ID0gaXRlbVsxXTtcbiAgdmFyIGNzc01hcHBpbmcgPSBpdGVtWzNdO1xuICBpZiAoIWNzc01hcHBpbmcpIHtcbiAgICByZXR1cm4gY29udGVudDtcbiAgfVxuICBpZiAodHlwZW9mIGJ0b2EgPT09IFwiZnVuY3Rpb25cIikge1xuICAgIHZhciBiYXNlNjQgPSBidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShjc3NNYXBwaW5nKSkpKTtcbiAgICB2YXIgZGF0YSA9IFwic291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsXCIuY29uY2F0KGJhc2U2NCk7XG4gICAgdmFyIHNvdXJjZU1hcHBpbmcgPSBcIi8qIyBcIi5jb25jYXQoZGF0YSwgXCIgKi9cIik7XG4gICAgcmV0dXJuIFtjb250ZW50XS5jb25jYXQoW3NvdXJjZU1hcHBpbmddKS5qb2luKFwiXFxuXCIpO1xuICB9XG4gIHJldHVybiBbY29udGVudF0uam9pbihcIlxcblwiKTtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBzdHlsZXNJbkRPTSA9IFtdO1xuZnVuY3Rpb24gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcikge1xuICB2YXIgcmVzdWx0ID0gLTE7XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgc3R5bGVzSW5ET00ubGVuZ3RoOyBpKyspIHtcbiAgICBpZiAoc3R5bGVzSW5ET01baV0uaWRlbnRpZmllciA9PT0gaWRlbnRpZmllcikge1xuICAgICAgcmVzdWx0ID0gaTtcbiAgICAgIGJyZWFrO1xuICAgIH1cbiAgfVxuICByZXR1cm4gcmVzdWx0O1xufVxuZnVuY3Rpb24gbW9kdWxlc1RvRG9tKGxpc3QsIG9wdGlvbnMpIHtcbiAgdmFyIGlkQ291bnRNYXAgPSB7fTtcbiAgdmFyIGlkZW50aWZpZXJzID0gW107XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgbGlzdC5sZW5ndGg7IGkrKykge1xuICAgIHZhciBpdGVtID0gbGlzdFtpXTtcbiAgICB2YXIgaWQgPSBvcHRpb25zLmJhc2UgPyBpdGVtWzBdICsgb3B0aW9ucy5iYXNlIDogaXRlbVswXTtcbiAgICB2YXIgY291bnQgPSBpZENvdW50TWFwW2lkXSB8fCAwO1xuICAgIHZhciBpZGVudGlmaWVyID0gXCJcIi5jb25jYXQoaWQsIFwiIFwiKS5jb25jYXQoY291bnQpO1xuICAgIGlkQ291bnRNYXBbaWRdID0gY291bnQgKyAxO1xuICAgIHZhciBpbmRleEJ5SWRlbnRpZmllciA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgIHZhciBvYmogPSB7XG4gICAgICBjc3M6IGl0ZW1bMV0sXG4gICAgICBtZWRpYTogaXRlbVsyXSxcbiAgICAgIHNvdXJjZU1hcDogaXRlbVszXSxcbiAgICAgIHN1cHBvcnRzOiBpdGVtWzRdLFxuICAgICAgbGF5ZXI6IGl0ZW1bNV1cbiAgICB9O1xuICAgIGlmIChpbmRleEJ5SWRlbnRpZmllciAhPT0gLTEpIHtcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4QnlJZGVudGlmaWVyXS5yZWZlcmVuY2VzKys7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleEJ5SWRlbnRpZmllcl0udXBkYXRlcihvYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgdXBkYXRlciA9IGFkZEVsZW1lbnRTdHlsZShvYmosIG9wdGlvbnMpO1xuICAgICAgb3B0aW9ucy5ieUluZGV4ID0gaTtcbiAgICAgIHN0eWxlc0luRE9NLnNwbGljZShpLCAwLCB7XG4gICAgICAgIGlkZW50aWZpZXI6IGlkZW50aWZpZXIsXG4gICAgICAgIHVwZGF0ZXI6IHVwZGF0ZXIsXG4gICAgICAgIHJlZmVyZW5jZXM6IDFcbiAgICAgIH0pO1xuICAgIH1cbiAgICBpZGVudGlmaWVycy5wdXNoKGlkZW50aWZpZXIpO1xuICB9XG4gIHJldHVybiBpZGVudGlmaWVycztcbn1cbmZ1bmN0aW9uIGFkZEVsZW1lbnRTdHlsZShvYmosIG9wdGlvbnMpIHtcbiAgdmFyIGFwaSA9IG9wdGlvbnMuZG9tQVBJKG9wdGlvbnMpO1xuICBhcGkudXBkYXRlKG9iaik7XG4gIHZhciB1cGRhdGVyID0gZnVuY3Rpb24gdXBkYXRlcihuZXdPYmopIHtcbiAgICBpZiAobmV3T2JqKSB7XG4gICAgICBpZiAobmV3T2JqLmNzcyA9PT0gb2JqLmNzcyAmJiBuZXdPYmoubWVkaWEgPT09IG9iai5tZWRpYSAmJiBuZXdPYmouc291cmNlTWFwID09PSBvYmouc291cmNlTWFwICYmIG5ld09iai5zdXBwb3J0cyA9PT0gb2JqLnN1cHBvcnRzICYmIG5ld09iai5sYXllciA9PT0gb2JqLmxheWVyKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIGFwaS51cGRhdGUob2JqID0gbmV3T2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgYXBpLnJlbW92ZSgpO1xuICAgIH1cbiAgfTtcbiAgcmV0dXJuIHVwZGF0ZXI7XG59XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChsaXN0LCBvcHRpb25zKSB7XG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuICBsaXN0ID0gbGlzdCB8fCBbXTtcbiAgdmFyIGxhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKTtcbiAgcmV0dXJuIGZ1bmN0aW9uIHVwZGF0ZShuZXdMaXN0KSB7XG4gICAgbmV3TGlzdCA9IG5ld0xpc3QgfHwgW107XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBpZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW2ldO1xuICAgICAgdmFyIGluZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleF0ucmVmZXJlbmNlcy0tO1xuICAgIH1cbiAgICB2YXIgbmV3TGFzdElkZW50aWZpZXJzID0gbW9kdWxlc1RvRG9tKG5ld0xpc3QsIG9wdGlvbnMpO1xuICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBfaSsrKSB7XG4gICAgICB2YXIgX2lkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbX2ldO1xuICAgICAgdmFyIF9pbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKF9pZGVudGlmaWVyKTtcbiAgICAgIGlmIChzdHlsZXNJbkRPTVtfaW5kZXhdLnJlZmVyZW5jZXMgPT09IDApIHtcbiAgICAgICAgc3R5bGVzSW5ET01bX2luZGV4XS51cGRhdGVyKCk7XG4gICAgICAgIHN0eWxlc0luRE9NLnNwbGljZShfaW5kZXgsIDEpO1xuICAgICAgfVxuICAgIH1cbiAgICBsYXN0SWRlbnRpZmllcnMgPSBuZXdMYXN0SWRlbnRpZmllcnM7XG4gIH07XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG52YXIgbWVtbyA9IHt9O1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGdldFRhcmdldCh0YXJnZXQpIHtcbiAgaWYgKHR5cGVvZiBtZW1vW3RhcmdldF0gPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICB2YXIgc3R5bGVUYXJnZXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRhcmdldCk7XG5cbiAgICAvLyBTcGVjaWFsIGNhc2UgdG8gcmV0dXJuIGhlYWQgb2YgaWZyYW1lIGluc3RlYWQgb2YgaWZyYW1lIGl0c2VsZlxuICAgIGlmICh3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQgJiYgc3R5bGVUYXJnZXQgaW5zdGFuY2VvZiB3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIC8vIFRoaXMgd2lsbCB0aHJvdyBhbiBleGNlcHRpb24gaWYgYWNjZXNzIHRvIGlmcmFtZSBpcyBibG9ja2VkXG4gICAgICAgIC8vIGR1ZSB0byBjcm9zcy1vcmlnaW4gcmVzdHJpY3Rpb25zXG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gc3R5bGVUYXJnZXQuY29udGVudERvY3VtZW50LmhlYWQ7XG4gICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIC8vIGlzdGFuYnVsIGlnbm9yZSBuZXh0XG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gbnVsbDtcbiAgICAgIH1cbiAgICB9XG4gICAgbWVtb1t0YXJnZXRdID0gc3R5bGVUYXJnZXQ7XG4gIH1cbiAgcmV0dXJuIG1lbW9bdGFyZ2V0XTtcbn1cblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBpbnNlcnRCeVNlbGVjdG9yKGluc2VydCwgc3R5bGUpIHtcbiAgdmFyIHRhcmdldCA9IGdldFRhcmdldChpbnNlcnQpO1xuICBpZiAoIXRhcmdldCkge1xuICAgIHRocm93IG5ldyBFcnJvcihcIkNvdWxkbid0IGZpbmQgYSBzdHlsZSB0YXJnZXQuIFRoaXMgcHJvYmFibHkgbWVhbnMgdGhhdCB0aGUgdmFsdWUgZm9yIHRoZSAnaW5zZXJ0JyBwYXJhbWV0ZXIgaXMgaW52YWxpZC5cIik7XG4gIH1cbiAgdGFyZ2V0LmFwcGVuZENoaWxkKHN0eWxlKTtcbn1cbm1vZHVsZS5leHBvcnRzID0gaW5zZXJ0QnlTZWxlY3RvcjsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBpbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucykge1xuICB2YXIgZWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzdHlsZVwiKTtcbiAgb3B0aW9ucy5zZXRBdHRyaWJ1dGVzKGVsZW1lbnQsIG9wdGlvbnMuYXR0cmlidXRlcyk7XG4gIG9wdGlvbnMuaW5zZXJ0KGVsZW1lbnQsIG9wdGlvbnMub3B0aW9ucyk7XG4gIHJldHVybiBlbGVtZW50O1xufVxubW9kdWxlLmV4cG9ydHMgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzKHN0eWxlRWxlbWVudCkge1xuICB2YXIgbm9uY2UgPSB0eXBlb2YgX193ZWJwYWNrX25vbmNlX18gIT09IFwidW5kZWZpbmVkXCIgPyBfX3dlYnBhY2tfbm9uY2VfXyA6IG51bGw7XG4gIGlmIChub25jZSkge1xuICAgIHN0eWxlRWxlbWVudC5zZXRBdHRyaWJ1dGUoXCJub25jZVwiLCBub25jZSk7XG4gIH1cbn1cbm1vZHVsZS5leHBvcnRzID0gc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGFwcGx5KHN0eWxlRWxlbWVudCwgb3B0aW9ucywgb2JqKSB7XG4gIHZhciBjc3MgPSBcIlwiO1xuICBpZiAob2JqLnN1cHBvcnRzKSB7XG4gICAgY3NzICs9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQob2JqLnN1cHBvcnRzLCBcIikge1wiKTtcbiAgfVxuICBpZiAob2JqLm1lZGlhKSB7XG4gICAgY3NzICs9IFwiQG1lZGlhIFwiLmNvbmNhdChvYmoubWVkaWEsIFwiIHtcIik7XG4gIH1cbiAgdmFyIG5lZWRMYXllciA9IHR5cGVvZiBvYmoubGF5ZXIgIT09IFwidW5kZWZpbmVkXCI7XG4gIGlmIChuZWVkTGF5ZXIpIHtcbiAgICBjc3MgKz0gXCJAbGF5ZXJcIi5jb25jYXQob2JqLmxheWVyLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQob2JqLmxheWVyKSA6IFwiXCIsIFwiIHtcIik7XG4gIH1cbiAgY3NzICs9IG9iai5jc3M7XG4gIGlmIChuZWVkTGF5ZXIpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cbiAgaWYgKG9iai5tZWRpYSkge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuICBpZiAob2JqLnN1cHBvcnRzKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG4gIHZhciBzb3VyY2VNYXAgPSBvYmouc291cmNlTWFwO1xuICBpZiAoc291cmNlTWFwICYmIHR5cGVvZiBidG9hICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgY3NzICs9IFwiXFxuLyojIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxcIi5jb25jYXQoYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoc291cmNlTWFwKSkpKSwgXCIgKi9cIik7XG4gIH1cblxuICAvLyBGb3Igb2xkIElFXG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAgKi9cbiAgb3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybShjc3MsIHN0eWxlRWxlbWVudCwgb3B0aW9ucy5vcHRpb25zKTtcbn1cbmZ1bmN0aW9uIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZUVsZW1lbnQpIHtcbiAgLy8gaXN0YW5idWwgaWdub3JlIGlmXG4gIGlmIChzdHlsZUVsZW1lbnQucGFyZW50Tm9kZSA9PT0gbnVsbCkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICBzdHlsZUVsZW1lbnQucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChzdHlsZUVsZW1lbnQpO1xufVxuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGRvbUFQSShvcHRpb25zKSB7XG4gIGlmICh0eXBlb2YgZG9jdW1lbnQgPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICByZXR1cm4ge1xuICAgICAgdXBkYXRlOiBmdW5jdGlvbiB1cGRhdGUoKSB7fSxcbiAgICAgIHJlbW92ZTogZnVuY3Rpb24gcmVtb3ZlKCkge31cbiAgICB9O1xuICB9XG4gIHZhciBzdHlsZUVsZW1lbnQgPSBvcHRpb25zLmluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKTtcbiAgcmV0dXJuIHtcbiAgICB1cGRhdGU6IGZ1bmN0aW9uIHVwZGF0ZShvYmopIHtcbiAgICAgIGFwcGx5KHN0eWxlRWxlbWVudCwgb3B0aW9ucywgb2JqKTtcbiAgICB9LFxuICAgIHJlbW92ZTogZnVuY3Rpb24gcmVtb3ZlKCkge1xuICAgICAgcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlRWxlbWVudCk7XG4gICAgfVxuICB9O1xufVxubW9kdWxlLmV4cG9ydHMgPSBkb21BUEk7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gc3R5bGVUYWdUcmFuc2Zvcm0oY3NzLCBzdHlsZUVsZW1lbnQpIHtcbiAgaWYgKHN0eWxlRWxlbWVudC5zdHlsZVNoZWV0KSB7XG4gICAgc3R5bGVFbGVtZW50LnN0eWxlU2hlZXQuY3NzVGV4dCA9IGNzcztcbiAgfSBlbHNlIHtcbiAgICB3aGlsZSAoc3R5bGVFbGVtZW50LmZpcnN0Q2hpbGQpIHtcbiAgICAgIHN0eWxlRWxlbWVudC5yZW1vdmVDaGlsZChzdHlsZUVsZW1lbnQuZmlyc3RDaGlsZCk7XG4gICAgfVxuICAgIHN0eWxlRWxlbWVudC5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShjc3MpKTtcbiAgfVxufVxubW9kdWxlLmV4cG9ydHMgPSBzdHlsZVRhZ1RyYW5zZm9ybTsiLCIvLyBUaGUgbW9kdWxlIGNhY2hlXG52YXIgX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fID0ge307XG5cbi8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG5mdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuXHR2YXIgY2FjaGVkTW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXTtcblx0aWYgKGNhY2hlZE1vZHVsZSAhPT0gdW5kZWZpbmVkKSB7XG5cdFx0cmV0dXJuIGNhY2hlZE1vZHVsZS5leHBvcnRzO1xuXHR9XG5cdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG5cdHZhciBtb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdID0ge1xuXHRcdGlkOiBtb2R1bGVJZCxcblx0XHQvLyBubyBtb2R1bGUubG9hZGVkIG5lZWRlZFxuXHRcdGV4cG9ydHM6IHt9XG5cdH07XG5cblx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG5cdF9fd2VicGFja19tb2R1bGVzX19bbW9kdWxlSWRdKG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG5cdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG5cdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbn1cblxuLy8gZXhwb3NlIHRoZSBtb2R1bGVzIG9iamVjdCAoX193ZWJwYWNrX21vZHVsZXNfXylcbl9fd2VicGFja19yZXF1aXJlX18ubSA9IF9fd2VicGFja19tb2R1bGVzX187XG5cbiIsIi8vIGdldERlZmF1bHRFeHBvcnQgZnVuY3Rpb24gZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub24taGFybW9ueSBtb2R1bGVzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSAobW9kdWxlKSA9PiB7XG5cdHZhciBnZXR0ZXIgPSBtb2R1bGUgJiYgbW9kdWxlLl9fZXNNb2R1bGUgP1xuXHRcdCgpID0+IChtb2R1bGVbJ2RlZmF1bHQnXSkgOlxuXHRcdCgpID0+IChtb2R1bGUpO1xuXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQoZ2V0dGVyLCB7IGE6IGdldHRlciB9KTtcblx0cmV0dXJuIGdldHRlcjtcbn07IiwiLy8gZGVmaW5lIGdldHRlciBmdW5jdGlvbnMgZm9yIGhhcm1vbnkgZXhwb3J0c1xuX193ZWJwYWNrX3JlcXVpcmVfXy5kID0gKGV4cG9ydHMsIGRlZmluaXRpb24pID0+IHtcblx0Zm9yKHZhciBrZXkgaW4gZGVmaW5pdGlvbikge1xuXHRcdGlmKF9fd2VicGFja19yZXF1aXJlX18ubyhkZWZpbml0aW9uLCBrZXkpICYmICFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywga2V5KSkge1xuXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIGtleSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGRlZmluaXRpb25ba2V5XSB9KTtcblx0XHR9XG5cdH1cbn07IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5nID0gKGZ1bmN0aW9uKCkge1xuXHRpZiAodHlwZW9mIGdsb2JhbFRoaXMgPT09ICdvYmplY3QnKSByZXR1cm4gZ2xvYmFsVGhpcztcblx0dHJ5IHtcblx0XHRyZXR1cm4gdGhpcyB8fCBuZXcgRnVuY3Rpb24oJ3JldHVybiB0aGlzJykoKTtcblx0fSBjYXRjaCAoZSkge1xuXHRcdGlmICh0eXBlb2Ygd2luZG93ID09PSAnb2JqZWN0JykgcmV0dXJuIHdpbmRvdztcblx0fVxufSkoKTsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSAob2JqLCBwcm9wKSA9PiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwgcHJvcCkpIiwidmFyIHNjcmlwdFVybDtcbmlmIChfX3dlYnBhY2tfcmVxdWlyZV9fLmcuaW1wb3J0U2NyaXB0cykgc2NyaXB0VXJsID0gX193ZWJwYWNrX3JlcXVpcmVfXy5nLmxvY2F0aW9uICsgXCJcIjtcbnZhciBkb2N1bWVudCA9IF9fd2VicGFja19yZXF1aXJlX18uZy5kb2N1bWVudDtcbmlmICghc2NyaXB0VXJsICYmIGRvY3VtZW50KSB7XG5cdGlmIChkb2N1bWVudC5jdXJyZW50U2NyaXB0KVxuXHRcdHNjcmlwdFVybCA9IGRvY3VtZW50LmN1cnJlbnRTY3JpcHQuc3JjO1xuXHRpZiAoIXNjcmlwdFVybCkge1xuXHRcdHZhciBzY3JpcHRzID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJzY3JpcHRcIik7XG5cdFx0aWYoc2NyaXB0cy5sZW5ndGgpIHtcblx0XHRcdHZhciBpID0gc2NyaXB0cy5sZW5ndGggLSAxO1xuXHRcdFx0d2hpbGUgKGkgPiAtMSAmJiAhc2NyaXB0VXJsKSBzY3JpcHRVcmwgPSBzY3JpcHRzW2ktLV0uc3JjO1xuXHRcdH1cblx0fVxufVxuLy8gV2hlbiBzdXBwb3J0aW5nIGJyb3dzZXJzIHdoZXJlIGFuIGF1dG9tYXRpYyBwdWJsaWNQYXRoIGlzIG5vdCBzdXBwb3J0ZWQgeW91IG11c3Qgc3BlY2lmeSBhbiBvdXRwdXQucHVibGljUGF0aCBtYW51YWxseSB2aWEgY29uZmlndXJhdGlvblxuLy8gb3IgcGFzcyBhbiBlbXB0eSBzdHJpbmcgKFwiXCIpIGFuZCBzZXQgdGhlIF9fd2VicGFja19wdWJsaWNfcGF0aF9fIHZhcmlhYmxlIGZyb20geW91ciBjb2RlIHRvIHVzZSB5b3VyIG93biBsb2dpYy5cbmlmICghc2NyaXB0VXJsKSB0aHJvdyBuZXcgRXJyb3IoXCJBdXRvbWF0aWMgcHVibGljUGF0aCBpcyBub3Qgc3VwcG9ydGVkIGluIHRoaXMgYnJvd3NlclwiKTtcbnNjcmlwdFVybCA9IHNjcmlwdFVybC5yZXBsYWNlKC8jLiokLywgXCJcIikucmVwbGFjZSgvXFw/LiokLywgXCJcIikucmVwbGFjZSgvXFwvW15cXC9dKyQvLCBcIi9cIik7XG5fX3dlYnBhY2tfcmVxdWlyZV9fLnAgPSBzY3JpcHRVcmw7IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5iID0gZG9jdW1lbnQuYmFzZVVSSSB8fCBzZWxmLmxvY2F0aW9uLmhyZWY7XG5cbi8vIG9iamVjdCB0byBzdG9yZSBsb2FkZWQgYW5kIGxvYWRpbmcgY2h1bmtzXG4vLyB1bmRlZmluZWQgPSBjaHVuayBub3QgbG9hZGVkLCBudWxsID0gY2h1bmsgcHJlbG9hZGVkL3ByZWZldGNoZWRcbi8vIFtyZXNvbHZlLCByZWplY3QsIFByb21pc2VdID0gY2h1bmsgbG9hZGluZywgMCA9IGNodW5rIGxvYWRlZFxudmFyIGluc3RhbGxlZENodW5rcyA9IHtcblx0MTc5OiAwXG59O1xuXG4vLyBubyBjaHVuayBvbiBkZW1hbmQgbG9hZGluZ1xuXG4vLyBubyBwcmVmZXRjaGluZ1xuXG4vLyBubyBwcmVsb2FkZWRcblxuLy8gbm8gSE1SXG5cbi8vIG5vIEhNUiBtYW5pZmVzdFxuXG4vLyBubyBvbiBjaHVua3MgbG9hZGVkXG5cbi8vIG5vIGpzb25wIGZ1bmN0aW9uIiwiX193ZWJwYWNrX3JlcXVpcmVfXy5uYyA9IHVuZGVmaW5lZDsiLCJcbiAgICAgIGltcG9ydCBBUEkgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgIGltcG9ydCBkb21BUEkgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydEZuIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qc1wiO1xuICAgICAgaW1wb3J0IHNldEF0dHJpYnV0ZXMgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRTdHlsZUVsZW1lbnQgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanNcIjtcbiAgICAgIGltcG9ydCBzdHlsZVRhZ1RyYW5zZm9ybUZuIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanNcIjtcbiAgICAgIGltcG9ydCBjb250ZW50LCAqIGFzIG5hbWVkRXhwb3J0IGZyb20gXCIhIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vaW5kZXguY3NzXCI7XG4gICAgICBcbiAgICAgIFxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtID0gc3R5bGVUYWdUcmFuc2Zvcm1Gbjtcbm9wdGlvbnMuc2V0QXR0cmlidXRlcyA9IHNldEF0dHJpYnV0ZXM7XG5cbiAgICAgIG9wdGlvbnMuaW5zZXJ0ID0gaW5zZXJ0Rm4uYmluZChudWxsLCBcImhlYWRcIik7XG4gICAgXG5vcHRpb25zLmRvbUFQSSA9IGRvbUFQSTtcbm9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50ID0gaW5zZXJ0U3R5bGVFbGVtZW50O1xuXG52YXIgdXBkYXRlID0gQVBJKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0ICogZnJvbSBcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9pbmRleC5jc3NcIjtcbiAgICAgICBleHBvcnQgZGVmYXVsdCBjb250ZW50ICYmIGNvbnRlbnQubG9jYWxzID8gY29udGVudC5sb2NhbHMgOiB1bmRlZmluZWQ7XG4iLCJpbXBvcnQgXCIuL2luZGV4LmNzc1wiO1xyXG5cclxuJChmdW5jdGlvbiAoKSB7XHJcbiAgICBpbml0KCk7XHJcbn0pO1xyXG5cclxubGV0IHNpZ25lciwgcHJvdmlkZXIsIG5mdGNvbnRyYWN0LCBjb2luY29udHJhY3QsIGFjY291bnQsIGNoYWluSWRcclxubGV0IHVwbGVhdmV0aW1lID0gW107XHJcbmxldCBzaG93cGFnZSA9IDA7XHJcbmxldCBuZnR1cmkgPSAnaHR0cHM6Ly93d3cucGktbWFyc2RvZy5jb20vaW1hZ2UvJztcclxuY29uc3QgTmZ0Q29udHJhY3RBZGRyZXNzID0gXCIweEZmY0JiNWE5ZGE3ZWYxMDVjNDNkMjRDOTljZTRFNTYyQTgxZDYxYTdcIjtcclxuY29uc3QgTmZ0Q29udHJhY3RBQkkgPSBbXHJcbiAgICBcImZ1bmN0aW9uIGlzQmxhY2tsaXN0ZWQoYWRkcmVzcykgcHVibGljIHZpZXcgcmV0dXJucyhib29sKVwiLFxyXG4gICAgXCJmdW5jdGlvbiBpc0FwcHJvdmVkRm9yQWxsKGFkZHJlc3MsIGFkZHJlc3MpIHB1YmxpYyB2aWV3IHJldHVybnMoYm9vbClcIixcclxuICAgIFwiZnVuY3Rpb24gc2V0QXBwcm92YWxGb3JBbGwoYWRkcmVzcywgYm9vbCkgcHVibGljIG5vbnBheWFibGVcIixcclxuICAgIFwiZnVuY3Rpb24gdG9rZW5PZk93bmVyQnlJbmRleChhZGRyZXNzLCB1aW50MjU2KSBwdWJsaWMgdmlldyByZXR1cm5zKHVpbnQyNTYpXCIsXHJcbiAgICBcImZ1bmN0aW9uIGJhbGFuY2VPZihhZGRyZXNzKSBwdWJsaWMgdmlldyByZXR1cm5zKHVpbnQyNTYpXCJcclxuXTtcclxuY29uc3QgQ29pbkNvbnRyYWN0QWRkcmVzcyA9IFwiMHhiMGM1MjU4MjQ4ODY2Yjc2MDQyOGI4NmY4NzhjMTcxZDNiYjdhYWIzXCI7XHJcbmNvbnN0IENvaW5Db250cmFjdEFCSSA9IFtcclxuICAgIFwiZnVuY3Rpb24gZ2V0YXR0cmlidXRlKHVpbnQxNikgcHVibGljIHZpZXcgcmV0dXJucyh1aW50OCwgYm9vbClcIixcclxuICAgIFwiZnVuY3Rpb24gc2V0YXR0cmlidXRlKHVpbnQxNiwgdWludDhbXSwgYm9vbFtdKSBwdWJsaWMgbm9ucGF5YWJsZVwiLFxyXG4gICAgXCJmdW5jdGlvbiBwbGVkZ2UodWludDE2W10sIHVpbnQ4KSBwdWJsaWMgbm9ucGF5YWJsZVwiLFxyXG4gICAgXCJmdW5jdGlvbiByZWxlYXNlcGxlZGdlKCkgcHVibGljIG5vbnBheWFibGVcIixcclxuICAgIFwiZnVuY3Rpb24gYmFsYW5jZU9mKGFkZHJlc3MpIHB1YmxpYyB2aWV3IHJldHVybnModWludDI1NilcIixcclxuICAgIFwiZnVuY3Rpb24gZ2V0cG93ZXIoKSBwdWJsaWMgdmlldyByZXR1cm5zKHVpbnQyNTYpXCIsXHJcbiAgICB7XHJcbiAgICAgICAgXCJpbnB1dHNcIjogW10sXHJcbiAgICAgICAgXCJuYW1lXCI6IFwidG9rZW5zb2Zvd25lclwiLFxyXG4gICAgICAgIFwib3V0cHV0c1wiOiBbXHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgIFwiY29tcG9uZW50c1wiOiBbXHJcbiAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBcImludGVybmFsVHlwZVwiOiBcInVpbnQyNTZcIixcclxuICAgICAgICAgICAgICAgICAgICAgICAgXCJuYW1lXCI6IFwicG93ZXJcIixcclxuICAgICAgICAgICAgICAgICAgICAgICAgXCJ0eXBlXCI6IFwidWludDI1NlwiXHJcbiAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIFwiaW50ZXJuYWxUeXBlXCI6IFwidWludDY0XCIsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIFwibmFtZVwiOiBcImVuZFRpbWVzdGFtcFwiLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBcInR5cGVcIjogXCJ1aW50NjRcIlxyXG4gICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBcImludGVybmFsVHlwZVwiOiBcInVpbnQxNltdXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIFwibmFtZVwiOiBcInRva2VuaWRzXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIFwidHlwZVwiOiBcInVpbnQxNltdXCJcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBdLFxyXG4gICAgICAgICAgICAgICAgXCJpbnRlcm5hbFR5cGVcIjogXCJzdHJ1Y3QgdGVzdC5wbGVkZ2VkYXRhW11cIixcclxuICAgICAgICAgICAgICAgIFwibmFtZVwiOiBcIlwiLFxyXG4gICAgICAgICAgICAgICAgXCJ0eXBlXCI6IFwidHVwbGVbXVwiXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICBdLFxyXG4gICAgICAgIFwic3RhdGVNdXRhYmlsaXR5XCI6IFwidmlld1wiLFxyXG4gICAgICAgIFwidHlwZVwiOiBcImZ1bmN0aW9uXCJcclxuICAgIH1cclxuXTtcclxuXHJcbmlmICh0eXBlb2Ygd2luZG93LmV0aGVyZXVtID09PSAndW5kZWZpbmVkJykge1xyXG4gICAgY29uc29sZS5sb2coXCJQbGVhc2UgaW5zdGFsbCBNZXRhTWFzay5cIik7XHJcbn1cdGVsc2Uge1xyXG4gICAgY29uc29sZS5sb2coXCJFbmFibGUgZXRoZXJldW0gb2suXCIpO1xyXG59XHJcblxyXG5hc3luYyBmdW5jdGlvbiBjb25uZWN0KCkge1xyXG4gICAgYXdhaXQgZXRoZXJldW0ucmVxdWVzdCh7IG1ldGhvZDogJ2V0aF9yZXF1ZXN0QWNjb3VudHMnIH0pXHJcbiAgICAgICAgLnRoZW4oaGFuZGxlQWNjb3VudHNDaGFuZ2VkKVxyXG4gICAgICAgIC5jYXRjaCgoZXJyKSA9PiB7XHJcbiAgICAgICAgICAgIGlmIChlcnIuY29kZSA9PT0gNDAwMSkge1xyXG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ1BsZWFzZSBjb25uZWN0IHRvIE1ldGFNYXNrLicpO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgY29uc29sZS5lcnJvcihlcnIpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICBhd2FpdCBldGhlcmV1bS5yZXF1ZXN0KHsgbWV0aG9kOiAnZXRoX2NoYWluSWQnIH0pXHJcbiAgICAgICAgLnRoZW4oKHJlc3VsdCkgPT4ge1xyXG4gICAgICAgICAgICBpZiAocmVzdWx0ICE9PSBjaGFpbklkKSB7XHJcbiAgICAgICAgICAgICAgICBjaGFpbklkID0gcmVzdWx0O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICBcclxuICAgIHByb3ZpZGVyID0gbmV3IGV0aGVycy5wcm92aWRlcnMuV2ViM1Byb3ZpZGVyKHdpbmRvdy5ldGhlcmV1bSk7XHJcbiAgICBzaWduZXIgPSBwcm92aWRlci5nZXRTaWduZXIoYWNjb3VudCk7ICAgICAgICAgICAgXHJcbn1cclxuXHJcbmV0aGVyZXVtLm9uKCdhY2NvdW50c0NoYW5nZWQnLCAoYWNjb3VudHMpID0+IHtcclxuICAgIGhhbmRsZUFjY291bnRzQ2hhbmdlZChhY2NvdW50cyk7XHJcbn0pO1xyXG5cclxuZnVuY3Rpb24gaGFuZGxlQWNjb3VudHNDaGFuZ2VkKGFjY291bnRzKSB7XHJcbiAgICBpZiAoYWNjb3VudHMubGVuZ3RoID09PSAwKSB7XHJcbiAgICAgICAgY29uc29sZS5sb2coJ1BsZWFzZSBjb25uZWN0IHRvIE1ldGFNYXNrLicpO1xyXG4gICAgfSBlbHNlIGlmIChhY2NvdW50c1swXSAhPT0gYWNjb3VudCkge1xyXG4gICAgICAgIGFjY291bnQgPSBhY2NvdW50c1swXTtcclxuICAgICAgICBjb25zb2xlLmxvZygnYWNjb3VudCBpcyBjaGFuZ2VkIScpO1xyXG4gICAgfSBlbHNle1xyXG4gICAgICAgIGNvbnNvbGUubG9nKCd0aGUgbmV0IGlzIGNvbm5lY3RlZCEnKTtcclxuICAgIH1cclxufVxyXG5cclxuZXRoZXJldW0ub24oJ2NoYWluQ2hhbmdlZCcsIChjaGFpbklkKSA9PiB7XHJcbiAgICB3aW5kb3cubG9jYXRpb24ucmVsb2FkKCk7XHJcbn0pO1xyXG5cclxuYXN5bmMgZnVuY3Rpb24gY29ubmVjdENvbnRyYWN0KENvbnRyYWN0QWRkcmVzcyxDb250cmFjdEFCSSkge1xyXG4gICAgaWYgKCFzaWduZXIpIGF3YWl0IGNvbm5lY3QoKTtcclxuICAgIHJldHVybiBuZXcgZXRoZXJzLkNvbnRyYWN0KFxyXG4gICAgICAgIENvbnRyYWN0QWRkcmVzcyxcclxuICAgICAgICBDb250cmFjdEFCSSxcclxuICAgICAgICBzaWduZXJcclxuICAgICk7XHJcbn1cclxuXHJcbmFzeW5jIGZ1bmN0aW9uIGlzQmxhY2tsaXN0ZWQoYWRkcikge1xyXG4gICAgaWYgKCFuZnRjb250cmFjdCkgbmZ0Y29udHJhY3QgPSBhd2FpdCBjb25uZWN0Q29udHJhY3QoTmZ0Q29udHJhY3RBZGRyZXNzLE5mdENvbnRyYWN0QUJJKTtcclxuICAgIHJldHVybiBhd2FpdCBuZnRjb250cmFjdC5pc0JsYWNrbGlzdGVkKGFkZHIpO1xyXG59XHJcblxyXG5hc3luYyBmdW5jdGlvbiB0b2tlbnNPZk93bmVyKGFkZHIsIHN0YXJ0PTAsIGNvdW50ID0gNjApIHtcclxuICAgIGlmICghbmZ0Y29udHJhY3QpIG5mdGNvbnRyYWN0ID0gYXdhaXQgY29ubmVjdENvbnRyYWN0KE5mdENvbnRyYWN0QWRkcmVzcyxOZnRDb250cmFjdEFCSSk7XHJcbiAgICBsZXQgbGVuID0gYXdhaXQgYmFsYW5jZU9mKGFkZHIpO1xyXG4gICAgbGV0IHRva2VucyA9W107XHJcbiAgICBsZXQgc3RhdHVzID0gZmFsc2U7XHJcbiAgICBsZXQgcyA9IHN0YXJ0KmNvdW50O1xyXG4gICAgbGV0IGVuZDtcclxuICAgIGlmIChzK2NvdW50PGxlbikge1xyXG4gICAgICAgIGVuZCA9IHMrY291bnQ7XHJcbiAgICAgICAgc3RhdHVzID0gdHJ1ZTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgICAgZW5kID0gbGVuO1xyXG4gICAgfVxyXG4gICAgZm9yICh2YXIgaSA9IHM7IGkgPCBlbmQ7IGkrKykge1xyXG4gICAgICAgIGxldCB0b28gPSBhd2FpdCBuZnRjb250cmFjdC50b2tlbk9mT3duZXJCeUluZGV4KGFkZHIsaSk7ICAgICAgICBcclxuICAgICAgICB0b2tlbnMucHVzaCh0b28udG9OdW1iZXIoKSlcclxuICAgIH1cclxuICAgIHJldHVybiB7c3RhdHVzLHRva2Vuc307XHJcbn1cclxuXHJcbmFzeW5jIGZ1bmN0aW9uIGJhbGFuY2VPZihhZGRyKSB7XHJcbiAgICBpZiAoIW5mdGNvbnRyYWN0KSBuZnRjb250cmFjdCA9IGF3YWl0IGNvbm5lY3RDb250cmFjdChOZnRDb250cmFjdEFkZHJlc3MsTmZ0Q29udHJhY3RBQkkpO1xyXG4gICAgY29uc3QgbXliYWxhbmNlID0gYXdhaXQgbmZ0Y29udHJhY3QuYmFsYW5jZU9mKGFkZHIpO1xyXG4gICAgcmV0dXJuIG15YmFsYW5jZS50b051bWJlcigpO1xyXG59XHJcblxyXG5hc3luYyBmdW5jdGlvbiBpc0FwcHJvdmVkRm9yQWxsKCkge1xyXG4gICAgaWYgKCFuZnRjb250cmFjdCkgbmZ0Y29udHJhY3QgPSBhd2FpdCBjb25uZWN0Q29udHJhY3QoTmZ0Q29udHJhY3RBZGRyZXNzLE5mdENvbnRyYWN0QUJJKTtcclxuICAgIHJldHVybiBhd2FpdCBuZnRjb250cmFjdC5pc0FwcHJvdmVkRm9yQWxsKGFjY291bnQsIENvaW5Db250cmFjdEFkZHJlc3MpO1xyXG59XHJcblxyXG5hc3luYyBmdW5jdGlvbiBzZXRBcHByb3ZhbEZvckFsbCgpIHtcclxuICAgIGlmICghbmZ0Y29udHJhY3QpIG5mdGNvbnRyYWN0ID0gYXdhaXQgY29ubmVjdENvbnRyYWN0KE5mdENvbnRyYWN0QWRkcmVzcyxOZnRDb250cmFjdEFCSSk7XHJcbiAgICBjb25zdCB0eCA9IGF3YWl0IG5mdGNvbnRyYWN0LnNldEFwcHJvdmFsRm9yQWxsKENvaW5Db250cmFjdEFkZHJlc3MsIHRydWUpO1xyXG4gICAgY29uc3Qgc2V0YWZhID0gYXdhaXQgdHgud2FpdCgpO1xyXG4gICAgcmV0dXJuIHNldGFmYS5zdGF0dXMgPT0gMTtcclxufVxyXG5cclxuYXN5bmMgZnVuY3Rpb24gY29pbnRva2Vuc29mb3duZXIoKSB7XHJcbiAgICBpZiAoIWNvaW5jb250cmFjdCkgY29pbmNvbnRyYWN0ID0gYXdhaXQgY29ubmVjdENvbnRyYWN0KENvaW5Db250cmFjdEFkZHJlc3MsQ29pbkNvbnRyYWN0QUJJKTtcclxuICAgIGNvbnN0IGFhYSA9IGF3YWl0IGNvaW5jb250cmFjdC50b2tlbnNvZm93bmVyKCk7XHJcbiAgICByZXR1cm4gYXdhaXQgY29pbmNvbnRyYWN0LnRva2Vuc29mb3duZXIoKTtcclxufVxyXG5cclxuYXN5bmMgZnVuY3Rpb24gY29pbmJhbGFuY2VPZihhZGRyKSB7XHJcbiAgICBpZiAoIWNvaW5jb250cmFjdCkgY29pbmNvbnRyYWN0ID0gYXdhaXQgY29ubmVjdENvbnRyYWN0KENvaW5Db250cmFjdEFkZHJlc3MsQ29pbkNvbnRyYWN0QUJJKTtcclxuICAgIHJldHVybiBhd2FpdCBjb2luY29udHJhY3QuYmFsYW5jZU9mKGFkZHIpO1xyXG59XHJcblxyXG5hc3luYyBmdW5jdGlvbiBnZXRwb3dlcigpIHtcclxuICAgIGlmICghY29pbmNvbnRyYWN0KSBjb2luY29udHJhY3QgPSBhd2FpdCBjb25uZWN0Q29udHJhY3QoQ29pbkNvbnRyYWN0QWRkcmVzcyxDb2luQ29udHJhY3RBQkkpO1xyXG4gICAgcmV0dXJuIGF3YWl0IGNvaW5jb250cmFjdC5nZXRwb3dlcigpO1xyXG59XHJcblxyXG5hc3luYyBmdW5jdGlvbiBwbGVkZ2UoKSB7XHJcbiAgICBsZXQgY2Fub3BlcmF0ZSA9IGF3YWl0IGlzQXBwcm92ZWRGb3JBbGwoKTtcclxuICAgIGlmICghY2Fub3BlcmF0ZSkge1xyXG4gICAgICAgIHNldEFwcHJvdmFsRm9yQWxsKCk7XHJcbiAgICB9XHJcbiAgICBpZiAoIWNvaW5jb250cmFjdCkgY29pbmNvbnRyYWN0ID0gYXdhaXQgY29ubmVjdENvbnRyYWN0KENvaW5Db250cmFjdEFkZHJlc3MsQ29pbkNvbnRyYWN0QUJJKTsgICAgXHJcbiAgICBsb2FkaW5nKCk7XHJcbiAgICB0cnkge1xyXG4gICAgICAgIGF3YWl0IGNvaW5jb250cmFjdC5wbGVkZ2UoZ2V0Y2hlY2tlZHZhbCgpLCQoJyNwbGVkZ2V0aW1lJykudmFsKCkpO1xyXG4gICAgICAgIHdpbmRvdy5sb2NhdGlvbi5yZWxvYWQoKTtcclxuICAgIH1cclxuICAgIGNhdGNoKGVycikge1xyXG4gICAgICAgIGxvYWRlZCgpO1xyXG4gICAgfVxyXG59XHJcblxyXG5hc3luYyBmdW5jdGlvbiByZWxlYXNlcGxlZGdlKCkge1xyXG4gICAgaWYgKCFjb2luY29udHJhY3QpIGNvaW5jb250cmFjdCA9IGF3YWl0IGNvbm5lY3RDb250cmFjdChDb2luQ29udHJhY3RBZGRyZXNzLENvaW5Db250cmFjdEFCSSk7ICAgIFxyXG4gICAgbG9hZGluZygpO1xyXG4gICAgdHJ5IHtcclxuICAgICAgICBhd2FpdCBjb2luY29udHJhY3QucmVsZWFzZXBsZWRnZSgpO1xyXG4gICAgICAgIHdpbmRvdy5sb2NhdGlvbi5yZWxvYWQoKTtcclxuICAgIH1cclxuICAgIGNhdGNoKGVycikge1xyXG4gICAgICAgIGxvYWRlZCgpO1xyXG4gICAgfVxyXG59XHJcblxyXG5hc3luYyBmdW5jdGlvbiBpbml0KCkge1xyXG4gICAgaWYgKCFhY2NvdW50KSBhd2FpdCBjb25uZWN0KCk7XHJcbiAgICBsb2FkaW5nKCk7XHJcbiAgICBsZXQgaXNpbmJsYWNrbGlzdCwgb3dudG9rZW5zXHJcbiAgICB0cnkge1xyXG4gICAgICAgIGlzaW5ibGFja2xpc3QgPSBhd2FpdCBpc0JsYWNrbGlzdGVkKGFjY291bnQpO1xyXG4gICAgICAgIGlmIChpc2luYmxhY2tsaXN0KSByZXR1cm47XHJcbiAgICAgICAgb3dudG9rZW5zID0gYXdhaXQgdG9rZW5zT2ZPd25lcihhY2NvdW50KTtcclxuICAgIH1cclxuICAgIGNhdGNoKGVycikge1xyXG4gICAgICAgIGxvYWRlZCgpO1xyXG4gICAgfVxyXG4gICAgbGV0IG93bk5URmh0bWwgPSAnJztcclxuICAgIGlmIChvd250b2tlbnMudG9rZW5zLmxlbmd0aCA9PSAwKSB7XHJcbiAgICAgICAgb3duTlRGaHRtbCA9IFwiPHNwYW4gc3R5bGU9J2NvbG9yOiByZWQ7Jz5Zb3UgZG9uJ3QgaGF2ZSBhbiBORlQgeWV0LCBwbGVhc2Ugb2J0YWluIG9uZSBmaXJzdCE8L3NwYW4+XCI7ICAgICAgICBcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgICAgJCgnLmNoZWNrYWxsJykuY3NzKCdkaXNwbGF5JywnYmxvY2snKTtcclxuICAgICAgICBvd250b2tlbnMudG9rZW5zLmZvckVhY2godG9rZW5pZCA9PiB7XHJcbiAgICAgICAgICAgIG93bk5URmh0bWwgKz0gJzxkaXY+PGxhYmVsPjxpbnB1dCB0eXBlPVwiY2hlY2tib3hcIiBvbmNoYW5nZT1cImNhbGN1bGF0ZXBvd2VyKCk7XCIgdmFsdWU9XCInK3Rva2VuaWQrJ1wiPjxkaXYgY2xhc3M9XCJpbWdcIj48aW1nIHNyYz1cIicrbmZ0dXJpK3Rva2VuaWQrJy5wbmdcIiBsb2FkaW5nPVwibGF6eVwiPjwvZGl2PiMnK3Rva2VuaWQrJzwvbGFiZWw+PC9kaXY+JztcclxuICAgICAgICB9KTtcclxuICAgIH0gICAgXHJcbiAgICBpZiAob3dudG9rZW5zLnN0YXR1cykge1xyXG4gICAgICAgICQoJy5nZXRtb3JlJykuY3NzKCdkaXNwbGF5JywnYmxvY2snKTtcclxuICAgICAgICBzaG93cGFnZSsrO1xyXG4gICAgfWVsc2V7XHJcbiAgICAgICAgJCgnLmdldG1vcmUnKS5jc3MoJ2Rpc3BsYXknLCdub25lJyk7XHJcbiAgICB9XHJcbiAgICAkKCcjb3duTlRGJykuaHRtbChvd25OVEZodG1sKTtcclxuXHJcbiAgICBsZXQgcGxlZGdlZHRva2Vuc1xyXG4gICAgdHJ5IHtcclxuICAgICAgICBwbGVkZ2VkdG9rZW5zID0gYXdhaXQgY29pbnRva2Vuc29mb3duZXIoKTtcclxuICAgIH1cclxuICAgIGNhdGNoKGVycikge1xyXG4gICAgICAgIGxvYWRlZCgpO1xyXG4gICAgfVxyXG4gICAgaWYgKHBsZWRnZWR0b2tlbnMubGVuZ3RoID4gMCkge1xyXG4gICAgICAgIGxldCBwbGVkZ2VkTlRGaHRtbCA9ICcnOyAgICAgICAgICAgIFxyXG4gICAgICAgIGxldCBkYXRlTm93ID0gcGFyc2VJbnQobmV3IERhdGUoKS5nZXRUaW1lKCkvMTAwMCk7XHJcbiAgICAgICAgbGV0IGluZGV4ID0gMDtcclxuICAgICAgICBwbGVkZ2VkdG9rZW5zLmZvckVhY2goKHRva2VuZGF0YSkgPT4ge1xyXG4gICAgICAgICAgICBsZXQgbGVhdmV0aW1lID0gdG9rZW5kYXRhLmVuZFRpbWVzdGFtcC50b051bWJlcigpIC0gZGF0ZU5vdztcclxuICAgICAgICAgICAgaWYgKGxlYXZldGltZSA8PSAwKSB7XHJcbiAgICAgICAgICAgICAgICB0b2tlbmRhdGEudG9rZW5pZHMuZm9yRWFjaCh0b2tlbmlkID0+IHtcclxuICAgICAgICAgICAgICAgICAgICBwbGVkZ2VkTlRGaHRtbCArPSAnPGRpdj4jJyt0b2tlbmlkKycgdGltZSBvdXQhIDxzcGFuIGNsYXNzPVwicGxlZGdlZFwiPmNhbiBiZSByZWxlYXNlZDwvc3Bhbj48L2Rpdj4nO1xyXG4gICAgICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIGxldCBsZWF2ZXRpbWVzdHIgPSBmb3JtYXR0aW1lKGxlYXZldGltZSxpbmRleCk7XHJcbiAgICAgICAgICAgICAgICB0b2tlbmRhdGEudG9rZW5pZHMuZm9yRWFjaCh0b2tlbmlkID0+IHtcclxuICAgICAgICAgICAgICAgICAgICBwbGVkZ2VkTlRGaHRtbCArPSAnPGRpdj4jJyt0b2tlbmlkKycgPHNwYW4gY2xhc3M9XCJwbGVkZ2VkJytpbmRleCsnXCI+JytsZWF2ZXRpbWVzdHIrJzwvc3Bhbj48L2Rpdj4nO1xyXG4gICAgICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgICAgIHVwbGVhdmV0aW1lLnB1c2gobGVhdmV0aW1lKTsgICAgICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgaW5kZXgrKztcclxuICAgICAgICAgICAgfSAgICAgICAgICAgICAgIFxyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHVwbGVhdmV0aW1lLmZvckVhY2goKGx2dGltZSxpKSA9PiB7XHJcbiAgICAgICAgICAgIHNldEludGVydmFsKCgpID0+IHtcclxuICAgICAgICAgICAgICAgIGlmIChsdnRpbWUgPiAwKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgbHZ0aW1lLS07XHJcbiAgICAgICAgICAgICAgICAgICAgJCgnLnBsZWRnZWQnK2kpLmh0bWwoZm9ybWF0dGltZShsdnRpbWUsaSkpO1xyXG4gICAgICAgICAgICAgICAgfSAgICAgICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIH0sMTAwMClcclxuICAgICAgICB9KTtcclxuICAgICAgICAkKCcjcGxlZGdlZE5URicpLmh0bWwocGxlZGdlZE5URmh0bWwpO1xyXG4gICAgICAgICQoJyNzaG93cGxlZGdlZCcpLmNzcygnZGlzcGxheScsJ2Jsb2NrJyk7XHJcbiAgICB9XHJcbiAgICAkKCcjYmFsYW5jZScpLnRleHQoYXdhaXQgY29pbmJhbGFuY2VPZihhY2NvdW50KSk7XHJcbiAgICAkKCcjcG93ZXInKS50ZXh0KGF3YWl0IGdldHBvd2VyKCkpO1xyXG4gICAgbG9hZGVkKCk7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGZvcm1hdHRpbWUoc2VjdGltZSxpbmRleCl7XHJcbiAgICBpZiAoc2VjdGltZSA8PSAwKSB7XHJcbiAgICAgICAgcmV0dXJuICd0aW1lIG91dCEgPHNwYW4gY2xhc3M9XCJwbGVkZ2VkXCI+Y2FuIGJlIHJlbGVhc2VkPC9zcGFuPic7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICAgIGxldCBtID0gcGFyc2VJbnQoc2VjdGltZSAvIDYwKTtcclxuICAgICAgICBsZXQgcyA9IHNlY3RpbWUgJSA2MDtcclxuICAgICAgICBsZXQgaCA9IHBhcnNlSW50KG0gLyA2MCk7XHJcbiAgICAgICAgbSA9IG0gJSA2MDtcclxuICAgICAgICBsZXQgZCA9IHBhcnNlSW50KGggLyAyNCk7XHJcbiAgICAgICAgaCA9IGggJSAyNDtcclxuICAgICAgICByZXR1cm4gJ3BsZWRnaW5nISB0aW1lIGxlZnQ8c3BhbiBjbGFzcz1cInBsZWRnZWRcIj4nK2QrJ2QnK2grJ2gnK20rJ20nK3MrJ3M8L3NwYW4+JztcclxuICAgIH1cclxufVxyXG5cclxuZnVuY3Rpb24gZ2V0Y2hlY2tlZHZhbCgpIHtcclxuICAgIGNvbnN0IHNlbGVjdGVkT3B0aW9ucyA9IFtdO1xyXG4gICAgJCgnI293bk5URiBpbnB1dFt0eXBlPWNoZWNrYm94XTpjaGVja2VkJykuZWFjaChmdW5jdGlvbigpIHtcclxuICAgICAgICBzZWxlY3RlZE9wdGlvbnMucHVzaCgkKHRoaXMpLnZhbCgpKTtcclxuICAgIH0pO1xyXG4gICAgcmV0dXJuIHNlbGVjdGVkT3B0aW9ucztcclxufVxyXG5cclxuZnVuY3Rpb24gY2hlY2thbGwoKSB7XHJcbiAgICBpZiAoJCgnI2NoZWNrYWxsJykuaXMoJzpjaGVja2VkJykpIHtcclxuICAgICAgICAkKCcjb3duTlRGIGlucHV0W3R5cGU9Y2hlY2tib3hdJykuZWFjaChmdW5jdGlvbigpIHtcclxuICAgICAgICAgICAgJCh0aGlzKS5wcm9wKFwiY2hlY2tlZFwiLHRydWUpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfWVsc2V7XHJcbiAgICAgICAgJCgnI293bk5URiBpbnB1dFt0eXBlPWNoZWNrYm94XScpLmVhY2goZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgICAgICQodGhpcykucHJvcChcImNoZWNrZWRcIixmYWxzZSk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbn1cclxuXHJcbmFzeW5jIGZ1bmN0aW9uIGdldG1vcmUoKSB7XHJcbiAgICBsZXQgb3dudG9rZW5zXHJcbiAgICB0cnkge1xyXG4gICAgICAgIG93bnRva2VucyA9IGF3YWl0IHRva2Vuc09mT3duZXIoYWNjb3VudCwgc2hvd3BhZ2UpO1xyXG4gICAgfVxyXG4gICAgY2F0Y2goZXJyKSB7XHJcbiAgICAgICAgbG9hZGVkKCk7XHJcbiAgICB9XHJcbiAgICBsZXQgb3duTlRGaHRtbCA9ICcnO1xyXG4gICAgaWYgKG93bnRva2Vucy50b2tlbnMubGVuZ3RoID09IDApIHtcclxuICAgICAgICBvd25OVEZodG1sID0gXCI8c3BhbiBzdHlsZT0nY29sb3I6IHJlZDsnPllvdSBkb24ndCBoYXZlIGFuIE5GVCB5ZXQsIHBsZWFzZSBvYnRhaW4gb25lIGZpcnN0ITwvc3Bhbj5cIjsgICAgICAgIFxyXG4gICAgfSBlbHNlIHtcclxuICAgICAgICAkKCcuY2hlY2thbGwnKS5jc3MoJ2Rpc3BsYXknLCdibG9jaycpO1xyXG4gICAgICAgIG93bnRva2Vucy50b2tlbnMuZm9yRWFjaCh0b2tlbmlkID0+IHtcclxuICAgICAgICAgICAgb3duTlRGaHRtbCArPSAnPGRpdj48bGFiZWw+PGlucHV0IHR5cGU9XCJjaGVja2JveFwiIG9uY2hhbmdlPVwiY2FsY3VsYXRlcG93ZXIoKTtcIiB2YWx1ZT1cIicrdG9rZW5pZCsnXCI+PGltZyBzcmM9XCInK25mdHVyaSt0b2tlbmlkKycucG5nXCIgbG9hZGluZz1cImxhenlcIj4jJyt0b2tlbmlkKyc8L2xhYmVsPjwvZGl2Pic7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9ICAgIFxyXG4gICAgaWYgKG93bnRva2Vucy5zdGF0dXMpIHtcclxuICAgICAgICAkKCcuZ2V0bW9yZScpLmNzcygnZGlzcGxheScsJ2Jsb2NrJyk7XHJcbiAgICAgICAgc2hvd3BhZ2UrKztcclxuICAgIH1lbHNle1xyXG4gICAgICAgICQoJy5nZXRtb3JlJykuY3NzKCdkaXNwbGF5Jywnbm9uZScpO1xyXG4gICAgfVxyXG4gICAgJCgnI293bk5URicpLmFwcGVuZChvd25OVEZodG1sKTtcclxuICAgIGxvYWRlZCgpO1xyXG59XHJcblxyXG5mdW5jdGlvbiBsb2FkaW5nKCkge1xyXG4gICAgdmFyIG1hc2tfYmcgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xyXG4gICAgbWFza19iZy5pZCA9IFwibWFza19iZ1wiO1xyXG4gICAgbWFza19iZy5zdHlsZS5wb3NpdGlvbiA9IFwiYWJzb2x1dGVcIjtcclxuICAgIG1hc2tfYmcuc3R5bGUudG9wID0gXCIwcHhcIjtcclxuICAgIG1hc2tfYmcuc3R5bGUubGVmdCA9IFwiMHB4XCI7XHJcbiAgICBtYXNrX2JnLnN0eWxlLndpZHRoID0gXCIxMDAlXCI7XHJcbiAgICB2YXIgYWxsaGVpZ2h0ID0gZG9jdW1lbnQuYm9keS5zY3JvbGxIZWlnaHQgKyAncHgnO1xyXG4gICAgbWFza19iZy5zdHlsZS5oZWlnaHQgPSBhbGxoZWlnaHQ7XHJcbiAgICBtYXNrX2JnLnN0eWxlLmJhY2tncm91bmRDb2xvciA9IFwiIzc3N1wiO1xyXG4gICAgbWFza19iZy5zdHlsZS5vcGFjaXR5ID0gMC42O1xyXG4gICAgbWFza19iZy5zdHlsZS56SW5kZXggPSAxMDAwMTtcclxuXHJcbiAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKG1hc2tfYmcpO1xyXG5cclxuICAgIHZhciBsb2FkaW5nX2RpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XHJcbiAgICBsb2FkaW5nX2Rpdi5pZCA9IFwibG9hZGluZ19kaXZcIjtcclxuICAgIGxvYWRpbmdfZGl2LnN0eWxlLnBvc2l0aW9uID0gXCJmaXhlZFwiOyAgICBcclxuICAgIGxvYWRpbmdfZGl2LnN0eWxlLnRvcCA9IFwiNTAlXCI7XHJcbiAgICBsb2FkaW5nX2Rpdi5zdHlsZS5sZWZ0ID0gXCIwcHhcIjtcclxuICAgIGxvYWRpbmdfZGl2LnN0eWxlLndpZHRoID0gXCIxMDAlXCI7XHJcbiAgICBsb2FkaW5nX2Rpdi5zdHlsZS50ZXh0QWxpZ24gPSBcImNlbnRlclwiO1xyXG4gICAgbG9hZGluZ19kaXYuc3R5bGUuekluZGV4ID0gMTAwMDI7XHJcbiAgICB2YXIgbG9hZGluZ19naWYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaW1nXCIpO1xyXG4gICAgbG9hZGluZ19naWYuc3JjID0gXCJsb2FkaW5nLmdpZlwiO1xyXG4gICAgbG9hZGluZ19naWYuc3R5bGUud2lkdGggPSBcIjEwMHB4XCI7XHJcbiAgICBsb2FkaW5nX2dpZi5zdHlsZS5kaXNwbGF5ID0gXCJpbmxpbmUtYmxvY2tcIjtcclxuICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQobG9hZGluZ19kaXYpO1xyXG4gICAgbG9hZGluZ19kaXYuYXBwZW5kQ2hpbGQobG9hZGluZ19naWYpO1xyXG59XHJcblxyXG5mdW5jdGlvbiBsb2FkZWQoKSB7XHJcbiAgICB2YXIgbWFza19iZyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibWFza19iZ1wiKTtcclxuICAgIGlmIChtYXNrX2JnICE9IG51bGwpXHJcbiAgICAgICAgbWFza19iZy5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKG1hc2tfYmcpO1xyXG4gICAgdmFyIGxvYWRpbmdfZGl2ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJsb2FkaW5nX2RpdlwiKTtcclxuICAgIGlmIChsb2FkaW5nX2RpdiAhPSBudWxsKVxyXG4gICAgICAgIGxvYWRpbmdfZGl2LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQobG9hZGluZ19kaXYpO1xyXG59XHJcblxyXG5kb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnY2hlY2thbGwnKS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGNoZWNrYWxsKTtcclxuZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2dldG1vcmUnKS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGdldG1vcmUpO1xyXG5kb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncGxlZGdlJykuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBwbGVkZ2UpO1xyXG5kb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncmVsZWFzZScpLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgcmVsZWFzZXBsZWRnZSk7XHJcbiJdLCJuYW1lcyI6WyJfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMF9fXyIsIlVSTCIsIl9fX0NTU19MT0FERVJfRVhQT1JUX19fIiwiX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMF9fXyIsInB1c2giLCJtb2R1bGUiLCJpZCIsImV4cG9ydHMiLCJjc3NXaXRoTWFwcGluZ1RvU3RyaW5nIiwibGlzdCIsInRvU3RyaW5nIiwidGhpcyIsIm1hcCIsIml0ZW0iLCJjb250ZW50IiwibmVlZExheWVyIiwiY29uY2F0IiwibGVuZ3RoIiwiam9pbiIsImkiLCJtb2R1bGVzIiwibWVkaWEiLCJkZWR1cGUiLCJzdXBwb3J0cyIsImxheWVyIiwidW5kZWZpbmVkIiwiYWxyZWFkeUltcG9ydGVkTW9kdWxlcyIsImsiLCJfayIsInVybCIsIm9wdGlvbnMiLCJTdHJpbmciLCJfX2VzTW9kdWxlIiwiZGVmYXVsdCIsInRlc3QiLCJzbGljZSIsImhhc2giLCJuZWVkUXVvdGVzIiwicmVwbGFjZSIsImNzc01hcHBpbmciLCJidG9hIiwiYmFzZTY0IiwidW5lc2NhcGUiLCJlbmNvZGVVUklDb21wb25lbnQiLCJKU09OIiwic3RyaW5naWZ5IiwiZGF0YSIsInNvdXJjZU1hcHBpbmciLCJzdHlsZXNJbkRPTSIsImdldEluZGV4QnlJZGVudGlmaWVyIiwiaWRlbnRpZmllciIsInJlc3VsdCIsIm1vZHVsZXNUb0RvbSIsImlkQ291bnRNYXAiLCJpZGVudGlmaWVycyIsImJhc2UiLCJjb3VudCIsImluZGV4QnlJZGVudGlmaWVyIiwib2JqIiwiY3NzIiwic291cmNlTWFwIiwicmVmZXJlbmNlcyIsInVwZGF0ZXIiLCJhZGRFbGVtZW50U3R5bGUiLCJieUluZGV4Iiwic3BsaWNlIiwiYXBpIiwiZG9tQVBJIiwidXBkYXRlIiwibmV3T2JqIiwicmVtb3ZlIiwibGFzdElkZW50aWZpZXJzIiwibmV3TGlzdCIsImluZGV4IiwibmV3TGFzdElkZW50aWZpZXJzIiwiX2kiLCJfaW5kZXgiLCJtZW1vIiwiaW5zZXJ0Iiwic3R5bGUiLCJ0YXJnZXQiLCJzdHlsZVRhcmdldCIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsIndpbmRvdyIsIkhUTUxJRnJhbWVFbGVtZW50IiwiY29udGVudERvY3VtZW50IiwiaGVhZCIsImUiLCJnZXRUYXJnZXQiLCJFcnJvciIsImFwcGVuZENoaWxkIiwiZWxlbWVudCIsImNyZWF0ZUVsZW1lbnQiLCJzZXRBdHRyaWJ1dGVzIiwiYXR0cmlidXRlcyIsInN0eWxlRWxlbWVudCIsIm5vbmNlIiwic2V0QXR0cmlidXRlIiwiaW5zZXJ0U3R5bGVFbGVtZW50Iiwic3R5bGVUYWdUcmFuc2Zvcm0iLCJhcHBseSIsInBhcmVudE5vZGUiLCJyZW1vdmVDaGlsZCIsInJlbW92ZVN0eWxlRWxlbWVudCIsInN0eWxlU2hlZXQiLCJjc3NUZXh0IiwiZmlyc3RDaGlsZCIsImNyZWF0ZVRleHROb2RlIiwiX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsIm1vZHVsZUlkIiwiY2FjaGVkTW9kdWxlIiwiX193ZWJwYWNrX21vZHVsZXNfXyIsIm0iLCJuIiwiZ2V0dGVyIiwiZCIsImEiLCJkZWZpbml0aW9uIiwia2V5IiwibyIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImdldCIsImciLCJnbG9iYWxUaGlzIiwiRnVuY3Rpb24iLCJwcm9wIiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwic2NyaXB0VXJsIiwiaW1wb3J0U2NyaXB0cyIsImxvY2F0aW9uIiwiY3VycmVudFNjcmlwdCIsInNyYyIsInNjcmlwdHMiLCJnZXRFbGVtZW50c0J5VGFnTmFtZSIsInAiLCJiIiwiYmFzZVVSSSIsInNlbGYiLCJocmVmIiwibmMiLCJsb2NhbHMiLCJfcmVnZW5lcmF0b3JSdW50aW1lIiwiT3AiLCJoYXNPd24iLCJkZXNjIiwidmFsdWUiLCIkU3ltYm9sIiwiU3ltYm9sIiwiaXRlcmF0b3JTeW1ib2wiLCJpdGVyYXRvciIsImFzeW5jSXRlcmF0b3JTeW1ib2wiLCJhc3luY0l0ZXJhdG9yIiwidG9TdHJpbmdUYWdTeW1ib2wiLCJ0b1N0cmluZ1RhZyIsImRlZmluZSIsImNvbmZpZ3VyYWJsZSIsIndyaXRhYmxlIiwiZXJyIiwid3JhcCIsImlubmVyRm4iLCJvdXRlckZuIiwidHJ5TG9jc0xpc3QiLCJwcm90b0dlbmVyYXRvciIsIkdlbmVyYXRvciIsImdlbmVyYXRvciIsImNyZWF0ZSIsImNvbnRleHQiLCJDb250ZXh0IiwibWFrZUludm9rZU1ldGhvZCIsInRyeUNhdGNoIiwiZm4iLCJhcmciLCJ0eXBlIiwiQ29udGludWVTZW50aW5lbCIsIkdlbmVyYXRvckZ1bmN0aW9uIiwiR2VuZXJhdG9yRnVuY3Rpb25Qcm90b3R5cGUiLCJJdGVyYXRvclByb3RvdHlwZSIsImdldFByb3RvIiwiZ2V0UHJvdG90eXBlT2YiLCJOYXRpdmVJdGVyYXRvclByb3RvdHlwZSIsInZhbHVlcyIsIkdwIiwiZGVmaW5lSXRlcmF0b3JNZXRob2RzIiwiZm9yRWFjaCIsIm1ldGhvZCIsIl9pbnZva2UiLCJBc3luY0l0ZXJhdG9yIiwiUHJvbWlzZUltcGwiLCJpbnZva2UiLCJyZXNvbHZlIiwicmVqZWN0IiwicmVjb3JkIiwiX3R5cGVvZiIsIl9fYXdhaXQiLCJ0aGVuIiwidW53cmFwcGVkIiwiZXJyb3IiLCJwcmV2aW91c1Byb21pc2UiLCJjYWxsSW52b2tlV2l0aE1ldGhvZEFuZEFyZyIsInN0YXRlIiwiZG9uZSIsImRlbGVnYXRlIiwiZGVsZWdhdGVSZXN1bHQiLCJtYXliZUludm9rZURlbGVnYXRlIiwic2VudCIsIl9zZW50IiwiZGlzcGF0Y2hFeGNlcHRpb24iLCJhYnJ1cHQiLCJtZXRob2ROYW1lIiwiVHlwZUVycm9yIiwiaW5mbyIsInJlc3VsdE5hbWUiLCJuZXh0IiwibmV4dExvYyIsInB1c2hUcnlFbnRyeSIsImxvY3MiLCJlbnRyeSIsInRyeUxvYyIsImNhdGNoTG9jIiwiZmluYWxseUxvYyIsImFmdGVyTG9jIiwidHJ5RW50cmllcyIsInJlc2V0VHJ5RW50cnkiLCJjb21wbGV0aW9uIiwicmVzZXQiLCJpdGVyYWJsZSIsIml0ZXJhdG9yTWV0aG9kIiwiaXNOYU4iLCJkaXNwbGF5TmFtZSIsImlzR2VuZXJhdG9yRnVuY3Rpb24iLCJnZW5GdW4iLCJjdG9yIiwiY29uc3RydWN0b3IiLCJuYW1lIiwibWFyayIsInNldFByb3RvdHlwZU9mIiwiX19wcm90b19fIiwiYXdyYXAiLCJhc3luYyIsIlByb21pc2UiLCJpdGVyIiwia2V5cyIsInZhbCIsIm9iamVjdCIsInJldmVyc2UiLCJwb3AiLCJza2lwVGVtcFJlc2V0IiwicHJldiIsImNoYXJBdCIsInN0b3AiLCJyb290UmVjb3JkIiwicnZhbCIsImV4Y2VwdGlvbiIsImhhbmRsZSIsImxvYyIsImNhdWdodCIsImhhc0NhdGNoIiwiaGFzRmluYWxseSIsImZpbmFsbHlFbnRyeSIsImNvbXBsZXRlIiwiZmluaXNoIiwidGhyb3duIiwiZGVsZWdhdGVZaWVsZCIsImFzeW5jR2VuZXJhdG9yU3RlcCIsImdlbiIsIl9uZXh0IiwiX3Rocm93IiwiX2FzeW5jVG9HZW5lcmF0b3IiLCJhcmdzIiwiYXJndW1lbnRzIiwic2lnbmVyIiwicHJvdmlkZXIiLCJuZnRjb250cmFjdCIsImNvaW5jb250cmFjdCIsImFjY291bnQiLCJjaGFpbklkIiwiJCIsIl9pbml0IiwiaW5pdCIsInVwbGVhdmV0aW1lIiwic2hvd3BhZ2UiLCJuZnR1cmkiLCJOZnRDb250cmFjdEFkZHJlc3MiLCJOZnRDb250cmFjdEFCSSIsIkNvaW5Db250cmFjdEFkZHJlc3MiLCJDb2luQ29udHJhY3RBQkkiLCJjb25uZWN0IiwiX2Nvbm5lY3QiLCJfY2FsbGVlIiwiX2NvbnRleHQiLCJldGhlcmV1bSIsInJlcXVlc3QiLCJoYW5kbGVBY2NvdW50c0NoYW5nZWQiLCJjb2RlIiwiY29uc29sZSIsImxvZyIsImV0aGVycyIsInByb3ZpZGVycyIsIldlYjNQcm92aWRlciIsImdldFNpZ25lciIsImFjY291bnRzIiwiY29ubmVjdENvbnRyYWN0IiwiX3giLCJfeDIiLCJfY29ubmVjdENvbnRyYWN0IiwiX2NhbGxlZTIiLCJDb250cmFjdEFkZHJlc3MiLCJDb250cmFjdEFCSSIsIl9jb250ZXh0MiIsIkNvbnRyYWN0IiwiaXNCbGFja2xpc3RlZCIsIl94MyIsIl9pc0JsYWNrbGlzdGVkIiwiX2NhbGxlZTMiLCJhZGRyIiwiX2NvbnRleHQzIiwidG9rZW5zT2ZPd25lciIsIl94NCIsIl90b2tlbnNPZk93bmVyIiwiX2NhbGxlZTQiLCJzdGFydCIsImxlbiIsInRva2VucyIsInN0YXR1cyIsInMiLCJlbmQiLCJ0b28iLCJfYXJnczQiLCJfY29udGV4dDQiLCJiYWxhbmNlT2YiLCJ0b2tlbk9mT3duZXJCeUluZGV4IiwidG9OdW1iZXIiLCJfeDUiLCJfYmFsYW5jZU9mIiwiX2NhbGxlZTUiLCJteWJhbGFuY2UiLCJfY29udGV4dDUiLCJpc0FwcHJvdmVkRm9yQWxsIiwiX2lzQXBwcm92ZWRGb3JBbGwiLCJfY2FsbGVlNiIsIl9jb250ZXh0NiIsInNldEFwcHJvdmFsRm9yQWxsIiwiX3NldEFwcHJvdmFsRm9yQWxsIiwiX2NhbGxlZTciLCJ0eCIsInNldGFmYSIsIl9jb250ZXh0NyIsIndhaXQiLCJjb2ludG9rZW5zb2Zvd25lciIsIl9jb2ludG9rZW5zb2Zvd25lciIsIl9jYWxsZWU4IiwiX2NvbnRleHQ4IiwidG9rZW5zb2Zvd25lciIsImNvaW5iYWxhbmNlT2YiLCJfeDYiLCJfY29pbmJhbGFuY2VPZiIsIl9jYWxsZWU5IiwiX2NvbnRleHQ5IiwiZ2V0cG93ZXIiLCJfZ2V0cG93ZXIiLCJfY2FsbGVlMTAiLCJfY29udGV4dDEwIiwiX3BsZWRnZSIsIl9jYWxsZWUxMSIsIl9jb250ZXh0MTEiLCJsb2FkaW5nIiwicGxlZGdlIiwiZ2V0Y2hlY2tlZHZhbCIsInJlbG9hZCIsInQwIiwibG9hZGVkIiwiX3JlbGVhc2VwbGVkZ2UiLCJfY2FsbGVlMTIiLCJfY29udGV4dDEyIiwicmVsZWFzZXBsZWRnZSIsIl9jYWxsZWUxMyIsIm93bnRva2VucyIsIm93bk5URmh0bWwiLCJwbGVkZ2VkdG9rZW5zIiwicGxlZGdlZE5URmh0bWwiLCJkYXRlTm93IiwiX2NvbnRleHQxMyIsInRva2VuaWQiLCJodG1sIiwidDEiLCJwYXJzZUludCIsIkRhdGUiLCJnZXRUaW1lIiwidG9rZW5kYXRhIiwibGVhdmV0aW1lIiwiZW5kVGltZXN0YW1wIiwidG9rZW5pZHMiLCJsZWF2ZXRpbWVzdHIiLCJmb3JtYXR0aW1lIiwibHZ0aW1lIiwic2V0SW50ZXJ2YWwiLCJ0MiIsInQzIiwidGV4dCIsInQ0IiwidDUiLCJzZWN0aW1lIiwiaCIsInNlbGVjdGVkT3B0aW9ucyIsImVhY2giLCJfZ2V0bW9yZSIsIl9jYWxsZWUxNCIsIl9jb250ZXh0MTQiLCJhcHBlbmQiLCJtYXNrX2JnIiwicG9zaXRpb24iLCJ0b3AiLCJsZWZ0Iiwid2lkdGgiLCJhbGxoZWlnaHQiLCJib2R5Iiwic2Nyb2xsSGVpZ2h0IiwiaGVpZ2h0IiwiYmFja2dyb3VuZENvbG9yIiwib3BhY2l0eSIsInpJbmRleCIsImxvYWRpbmdfZGl2IiwidGV4dEFsaWduIiwibG9hZGluZ19naWYiLCJkaXNwbGF5IiwiZ2V0RWxlbWVudEJ5SWQiLCJvbiIsImFkZEV2ZW50TGlzdGVuZXIiLCJpcyJdLCJzb3VyY2VSb290IjoiIn0=